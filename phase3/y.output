Useless nonterminals:

   program
   end_program
   question


Terminals which are not used:

   QUESTION


Useless rules:

#72    program :	 PROGRAM;
#75    end_program :	 END_PROGRAM;
#88    question :	 QUESTION;


State 58 contains 1 shift/reduce conflict.
State 59 contains 1 shift/reduce conflict.
State 61 contains 2 shift/reduce conflicts.
State 62 contains 3 shift/reduce conflicts.
State 131 contains 1 shift/reduce conflict.

Grammar
rule 1    program_start -> PROGRAM IDENT SEMICOLON block END_PROGRAM
rule 2    block -> declaration_list begin_program statement_list
rule 3    declaration_list -> declaration_list declaration semicolon
rule 4    declaration_list -> declaration semicolon
rule 5    declaration -> identifier_list colon optional_array integer
rule 6    identifier_list -> identifier_list comma identifier
rule 7    identifier_list -> identifier
rule 8    optional_array -> array l_bracket number r_bracket of
rule 9    optional_array ->		/* empty */
rule 10   statement -> var assign expression
rule 11   statement -> if bool_exp then statement_list optional_elseif optional_else end_if
rule 12   statement -> while bool_exp begin_loop statement_list end_loop
rule 13   statement -> do begin_loop statement_list dend_loop while bool_exp
rule 14   statement -> read var_list
rule 15   statement -> write var_list
rule 16   statement -> break
rule 17   statement -> continue
rule 18   statement -> exit
rule 19   optional_elseif -> optional_elseif elseif bool_exp statement_list
rule 20   optional_elseif -> elseif bool_exp statement_list
rule 21   optional_elseif ->		/* empty */
rule 22   optional_else -> else statement_list
rule 23   optional_else ->		/* empty */
rule 24   var_list -> var_list comma var
rule 25   var_list -> var
rule 26   statement_list -> statement_list statement semicolon
rule 27   statement_list -> statement semicolon
rule 28   bool_exp -> relation_and_exp relation_and_exp_list
rule 29   relation_and_exp_list -> relation_and_exp_list or relation_and_exp
rule 30   relation_and_exp_list -> or relation_and_exp
rule 31   relation_and_exp_list ->		/* empty */
rule 32   relation_and_exp -> relation_exp relation_exp_list
rule 33   relation_exp_list -> relation_exp_list and relation_exp
rule 34   relation_exp_list -> and relation_exp
rule 35   relation_exp_list ->		/* empty */
rule 36   relation_exp -> not expression comp expression
rule 37   relation_exp -> not true
rule 38   relation_exp -> not false
rule 39   relation_exp -> not l_paren bool_exp r_paren
rule 40   relation_exp -> expression comp expression
rule 41   relation_exp -> true
rule 42   relation_exp -> false
rule 43   relation_exp -> l_paren bool_exp r_paren
rule 44   comp -> equal_to
rule 45   comp -> not_equal_to
rule 46   comp -> less_than
rule 47   comp -> greater_than
rule 48   comp -> less_than_or_equal_to
rule 49   comp -> greater_than_or_equal_to
rule 50   expression -> multiplicative_exp multiplicative_exp_list
rule 51   multiplicative_exp_list -> multiplicative_exp_list add multiplicative_exp
rule 52   multiplicative_exp_list -> multiplicative_exp_list sub multiplicative_exp
rule 53   multiplicative_exp_list -> add multiplicative_exp
rule 54   multiplicative_exp_list -> sub multiplicative_exp
rule 55   multiplicative_exp_list ->		/* empty */
rule 56   multiplicative_exp -> term term_list
rule 57   term_list -> term_list multiply term
rule 58   term_list -> term_list divide term
rule 59   term_list -> term_list mod term
rule 60   term_list -> multiply term
rule 61   term_list -> divide term
rule 62   term_list -> mod term
rule 63   term_list ->		/* empty */
rule 64   term -> sub var
rule 65   term -> sub number var
rule 66   term -> sub l_paren expression r_paren
rule 67   term -> var
rule 68   term -> number
rule 69   term -> l_paren expression r_paren
rule 70   var -> identifier
rule 71   var -> identifier l_bracket expression r_bracket
rule 73   identifier -> IDENT
rule 74   semicolon -> SEMICOLON
rule 76   begin_program -> BEGIN_PROGRAM
rule 77   comma -> COMMA
rule 78   colon -> COLON
rule 79   array -> ARRAY
rule 80   l_bracket -> L_BRACKET
rule 81   number -> NUMBER
rule 82   r_bracket -> R_BRACKET
rule 83   l_paren -> L_PAREN
rule 84   r_paren -> R_PAREN
rule 85   of -> OF
rule 86   integer -> INTEGER
rule 87   assign -> ASSIGN
rule 89   if -> IF
rule 90   then -> THEN
rule 91   end_if -> ENDIF
rule 92   elseif -> ELSEIF
rule 93   else -> ELSE
rule 94   while -> WHILE
rule 95   begin_loop -> BEGINLOOP
rule 96   dend_loop -> ENDLOOP
rule 97   end_loop -> ENDLOOP
rule 98   do -> DO
rule 99   read -> READ
rule 100  write -> WRITE
rule 101  break -> BREAK
rule 102  continue -> CONTINUE
rule 103  exit -> EXIT
rule 104  or -> OR
rule 105  and -> AND
rule 106  not -> NOT
rule 107  true -> TRUE
rule 108  false -> FALSE
rule 109  equal_to -> EQ
rule 110  not_equal_to -> NEQ
rule 111  less_than -> LT
rule 112  greater_than -> GT
rule 113  less_than_or_equal_to -> LTE
rule 114  greater_than_or_equal_to -> GTE
rule 115  add -> ADD
rule 116  sub -> SUB
rule 117  multiply -> MULT
rule 118  divide -> DIV
rule 119  mod -> MOD

Terminals, with rules where they appear

$ (-1)
error (256)
PROGRAM (258) 1 72
BEGIN_PROGRAM (259) 76
END_PROGRAM (260) 1 75
INTEGER (261) 86
ARRAY (262) 79
OF (263) 85
IF (264) 89
THEN (265) 90
ENDIF (266) 91
ELSE (267) 93
ELSEIF (268) 92
WHILE (269) 94
DO (270) 98
BEGINLOOP (271) 95
ENDLOOP (272) 96 97
BREAK (273) 101
CONTINUE (274) 102
EXIT (275) 103
READ (276) 99
WRITE (277) 100
AND (278) 105
OR (279) 104
NOT (280) 106
TRUE (281) 107
FALSE (282) 108
SUB (283) 116
ADD (284) 115
MULT (285) 117
DIV (286) 118
MOD (287) 119
EQ (288) 109
NEQ (289) 110
LT (290) 111
GT (291) 112
LTE (292) 113
GTE (293) 114
SEMICOLON (294) 1 74
COLON (295) 78
COMMA (296) 77
QUESTION (297) 88
L_BRACKET (298) 80
R_BRACKET (299) 82
L_PAREN (300) 83
R_PAREN (301) 84
ASSIGN (302) 87
NUMBER (303) 81
IDENT (304) 1 73
NEG (305)

Nonterminals, with rules where they appear

program_start (51)
    on left: 1
block (52)
    on left: 2, on right: 1
declaration_list (53)
    on left: 3 4, on right: 2 3
declaration (54)
    on left: 5, on right: 3 4
identifier_list (55)
    on left: 6 7, on right: 5 6
optional_array (56)
    on left: 8 9, on right: 5
statement (57)
    on left: 10 11 12 13 14 15 16 17 18, on right: 26 27
optional_elseif (58)
    on left: 19 20 21, on right: 11 19
optional_else (59)
    on left: 22 23, on right: 11
var_list (60)
    on left: 24 25, on right: 14 15 24
statement_list (61)
    on left: 26 27, on right: 2 11 12 13 19 20 22 26
bool_exp (62)
    on left: 28, on right: 11 12 13 19 20 39 43
relation_and_exp_list (63)
    on left: 29 30 31, on right: 28 29
relation_and_exp (64)
    on left: 32, on right: 28 29 30
relation_exp_list (65)
    on left: 33 34 35, on right: 32 33
relation_exp (66)
    on left: 36 37 38 39 40 41 42 43, on right: 32 33 34
comp (67)
    on left: 44 45 46 47 48 49, on right: 36 40
expression (68)
    on left: 50, on right: 10 36 40 66 69 71
multiplicative_exp_list (69)
    on left: 51 52 53 54 55, on right: 50 51 52
multiplicative_exp (70)
    on left: 56, on right: 50 51 52 53 54
term_list (71)
    on left: 57 58 59 60 61 62 63, on right: 56 57 58 59
term (72)
    on left: 64 65 66 67 68 69, on right: 56 57 58 59 60 61 62
var (73)
    on left: 70 71, on right: 10 24 25 64 65 67
identifier (74)
    on left: 73, on right: 6 7 70 71
semicolon (75)
    on left: 74, on right: 3 4 26 27
begin_program (76)
    on left: 76, on right: 2
comma (77)
    on left: 77, on right: 6 24
colon (78)
    on left: 78, on right: 5
array (79)
    on left: 79, on right: 8
l_bracket (80)
    on left: 80, on right: 8 71
number (81)
    on left: 81, on right: 8 65 68
r_bracket (82)
    on left: 82, on right: 8 71
l_paren (83)
    on left: 83, on right: 39 43 66 69
r_paren (84)
    on left: 84, on right: 39 43 66 69
of (85)
    on left: 85, on right: 8
integer (86)
    on left: 86, on right: 5
assign (87)
    on left: 87, on right: 10
if (88)
    on left: 89, on right: 11
then (89)
    on left: 90, on right: 11
end_if (90)
    on left: 91, on right: 11
elseif (91)
    on left: 92, on right: 19 20
else (92)
    on left: 93, on right: 22
while (93)
    on left: 94, on right: 12 13
begin_loop (94)
    on left: 95, on right: 12 13
dend_loop (95)
    on left: 96, on right: 13
end_loop (96)
    on left: 97, on right: 12
do (97)
    on left: 98, on right: 13
read (98)
    on left: 99, on right: 14
write (99)
    on left: 100, on right: 15
break (100)
    on left: 101, on right: 16
continue (101)
    on left: 102, on right: 17
exit (102)
    on left: 103, on right: 18
or (103)
    on left: 104, on right: 29 30
and (104)
    on left: 105, on right: 33 34
not (105)
    on left: 106, on right: 36 37 38 39
true (106)
    on left: 107, on right: 37 41
false (107)
    on left: 108, on right: 38 42
equal_to (108)
    on left: 109, on right: 44
not_equal_to (109)
    on left: 110, on right: 45
less_than (110)
    on left: 111, on right: 46
greater_than (111)
    on left: 112, on right: 47
less_than_or_equal_to (112)
    on left: 113, on right: 48
greater_than_or_equal_to (113)
    on left: 114, on right: 49
add (114)
    on left: 115, on right: 51 53
sub (115)
    on left: 116, on right: 52 54 64 65 66
multiply (116)
    on left: 117, on right: 57 60
divide (117)
    on left: 118, on right: 58 61
mod (118)
    on left: 119, on right: 59 62


state 0

    PROGRAM	shift, and go to state 1

    program_start	go to state 189



state 1

    program_start  ->  PROGRAM . IDENT SEMICOLON block END_PROGRAM   (rule 1)

    IDENT	shift, and go to state 2



state 2

    program_start  ->  PROGRAM IDENT . SEMICOLON block END_PROGRAM   (rule 1)

    SEMICOLON	shift, and go to state 3



state 3

    program_start  ->  PROGRAM IDENT SEMICOLON . block END_PROGRAM   (rule 1)

    IDENT	shift, and go to state 4

    block	go to state 5
    declaration_list	go to state 6
    declaration	go to state 7
    identifier_list	go to state 8
    identifier	go to state 9



state 4

    identifier  ->  IDENT .   (rule 73)

    $default	reduce using rule 73 (identifier)



state 5

    program_start  ->  PROGRAM IDENT SEMICOLON block . END_PROGRAM   (rule 1)

    END_PROGRAM	shift, and go to state 10



state 6

    block  ->  declaration_list . begin_program statement_list   (rule 2)
    declaration_list  ->  declaration_list . declaration semicolon   (rule 3)

    BEGIN_PROGRAM	shift, and go to state 11
    IDENT	shift, and go to state 4

    declaration	go to state 12
    identifier_list	go to state 8
    identifier	go to state 9
    begin_program	go to state 13



state 7

    declaration_list  ->  declaration . semicolon   (rule 4)

    SEMICOLON	shift, and go to state 14

    semicolon	go to state 15



state 8

    declaration  ->  identifier_list . colon optional_array integer   (rule 5)
    identifier_list  ->  identifier_list . comma identifier   (rule 6)

    COLON	shift, and go to state 16
    COMMA	shift, and go to state 17

    comma	go to state 18
    colon	go to state 19



state 9

    identifier_list  ->  identifier .   (rule 7)

    $default	reduce using rule 7 (identifier_list)



state 10

    program_start  ->  PROGRAM IDENT SEMICOLON block END_PROGRAM .   (rule 1)

    $default	reduce using rule 1 (program_start)



state 11

    begin_program  ->  BEGIN_PROGRAM .   (rule 76)

    $default	reduce using rule 76 (begin_program)



state 12

    declaration_list  ->  declaration_list declaration . semicolon   (rule 3)

    SEMICOLON	shift, and go to state 14

    semicolon	go to state 20



state 13

    block  ->  declaration_list begin_program . statement_list   (rule 2)

    IF  	shift, and go to state 21
    WHILE	shift, and go to state 22
    DO  	shift, and go to state 23
    BREAK	shift, and go to state 24
    CONTINUE	shift, and go to state 25
    EXIT	shift, and go to state 26
    READ	shift, and go to state 27
    WRITE	shift, and go to state 28
    IDENT	shift, and go to state 4

    statement	go to state 29
    statement_list	go to state 30
    var 	go to state 31
    identifier	go to state 32
    if  	go to state 33
    while	go to state 34
    do  	go to state 35
    read	go to state 36
    write	go to state 37
    break	go to state 38
    continue	go to state 39
    exit	go to state 40



state 14

    semicolon  ->  SEMICOLON .   (rule 74)

    $default	reduce using rule 74 (semicolon)



state 15

    declaration_list  ->  declaration semicolon .   (rule 4)

    $default	reduce using rule 4 (declaration_list)



state 16

    colon  ->  COLON .   (rule 78)

    $default	reduce using rule 78 (colon)



state 17

    comma  ->  COMMA .   (rule 77)

    $default	reduce using rule 77 (comma)



state 18

    identifier_list  ->  identifier_list comma . identifier   (rule 6)

    IDENT	shift, and go to state 4

    identifier	go to state 41



state 19

    declaration  ->  identifier_list colon . optional_array integer   (rule 5)

    ARRAY	shift, and go to state 42

    $default	reduce using rule 9 (optional_array)

    optional_array	go to state 43
    array	go to state 44



state 20

    declaration_list  ->  declaration_list declaration semicolon .   (rule 3)

    $default	reduce using rule 3 (declaration_list)



state 21

    if  ->  IF .   (rule 89)

    $default	reduce using rule 89 (if)



state 22

    while  ->  WHILE .   (rule 94)

    $default	reduce using rule 94 (while)



state 23

    do  ->  DO .   (rule 98)

    $default	reduce using rule 98 (do)



state 24

    break  ->  BREAK .   (rule 101)

    $default	reduce using rule 101 (break)



state 25

    continue  ->  CONTINUE .   (rule 102)

    $default	reduce using rule 102 (continue)



state 26

    exit  ->  EXIT .   (rule 103)

    $default	reduce using rule 103 (exit)



state 27

    read  ->  READ .   (rule 99)

    $default	reduce using rule 99 (read)



state 28

    write  ->  WRITE .   (rule 100)

    $default	reduce using rule 100 (write)



state 29

    statement_list  ->  statement . semicolon   (rule 27)

    SEMICOLON	shift, and go to state 14

    semicolon	go to state 45



state 30

    block  ->  declaration_list begin_program statement_list .   (rule 2)
    statement_list  ->  statement_list . statement semicolon   (rule 26)

    IF  	shift, and go to state 21
    WHILE	shift, and go to state 22
    DO  	shift, and go to state 23
    BREAK	shift, and go to state 24
    CONTINUE	shift, and go to state 25
    EXIT	shift, and go to state 26
    READ	shift, and go to state 27
    WRITE	shift, and go to state 28
    IDENT	shift, and go to state 4

    $default	reduce using rule 2 (block)

    statement	go to state 46
    var 	go to state 31
    identifier	go to state 32
    if  	go to state 33
    while	go to state 34
    do  	go to state 35
    read	go to state 36
    write	go to state 37
    break	go to state 38
    continue	go to state 39
    exit	go to state 40



state 31

    statement  ->  var . assign expression   (rule 10)

    ASSIGN	shift, and go to state 47

    assign	go to state 48



state 32

    var  ->  identifier .   (rule 70)
    var  ->  identifier . l_bracket expression r_bracket   (rule 71)

    L_BRACKET	shift, and go to state 49

    $default	reduce using rule 70 (var)

    l_bracket	go to state 50



state 33

    statement  ->  if . bool_exp then statement_list optional_elseif optional_else end_if   (rule 11)

    NOT 	shift, and go to state 51
    TRUE	shift, and go to state 52
    FALSE	shift, and go to state 53
    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    bool_exp	go to state 57
    relation_and_exp	go to state 58
    relation_exp	go to state 59
    expression	go to state 60
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 65
    not 	go to state 66
    true	go to state 67
    false	go to state 68
    sub 	go to state 69



state 34

    statement  ->  while . bool_exp begin_loop statement_list end_loop   (rule 12)

    NOT 	shift, and go to state 51
    TRUE	shift, and go to state 52
    FALSE	shift, and go to state 53
    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    bool_exp	go to state 70
    relation_and_exp	go to state 58
    relation_exp	go to state 59
    expression	go to state 60
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 65
    not 	go to state 66
    true	go to state 67
    false	go to state 68
    sub 	go to state 69



state 35

    statement  ->  do . begin_loop statement_list dend_loop while bool_exp   (rule 13)

    BEGINLOOP	shift, and go to state 71

    begin_loop	go to state 72



state 36

    statement  ->  read . var_list   (rule 14)

    IDENT	shift, and go to state 4

    var_list	go to state 73
    var 	go to state 74
    identifier	go to state 32



state 37

    statement  ->  write . var_list   (rule 15)

    IDENT	shift, and go to state 4

    var_list	go to state 75
    var 	go to state 74
    identifier	go to state 32



state 38

    statement  ->  break .   (rule 16)

    $default	reduce using rule 16 (statement)



state 39

    statement  ->  continue .   (rule 17)

    $default	reduce using rule 17 (statement)



state 40

    statement  ->  exit .   (rule 18)

    $default	reduce using rule 18 (statement)



state 41

    identifier_list  ->  identifier_list comma identifier .   (rule 6)

    $default	reduce using rule 6 (identifier_list)



state 42

    array  ->  ARRAY .   (rule 79)

    $default	reduce using rule 79 (array)



state 43

    declaration  ->  identifier_list colon optional_array . integer   (rule 5)

    INTEGER	shift, and go to state 76

    integer	go to state 77



state 44

    optional_array  ->  array . l_bracket number r_bracket of   (rule 8)

    L_BRACKET	shift, and go to state 49

    l_bracket	go to state 78



state 45

    statement_list  ->  statement semicolon .   (rule 27)

    $default	reduce using rule 27 (statement_list)



state 46

    statement_list  ->  statement_list statement . semicolon   (rule 26)

    SEMICOLON	shift, and go to state 14

    semicolon	go to state 79



state 47

    assign  ->  ASSIGN .   (rule 87)

    $default	reduce using rule 87 (assign)



state 48

    statement  ->  var assign . expression   (rule 10)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    expression	go to state 80
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 49

    l_bracket  ->  L_BRACKET .   (rule 80)

    $default	reduce using rule 80 (l_bracket)



state 50

    var  ->  identifier l_bracket . expression r_bracket   (rule 71)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    expression	go to state 82
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 51

    not  ->  NOT .   (rule 106)

    $default	reduce using rule 106 (not)



state 52

    true  ->  TRUE .   (rule 107)

    $default	reduce using rule 107 (true)



state 53

    false  ->  FALSE .   (rule 108)

    $default	reduce using rule 108 (false)



state 54

    sub  ->  SUB .   (rule 116)

    $default	reduce using rule 116 (sub)



state 55

    l_paren  ->  L_PAREN .   (rule 83)

    $default	reduce using rule 83 (l_paren)



state 56

    number  ->  NUMBER .   (rule 81)

    $default	reduce using rule 81 (number)



state 57

    statement  ->  if bool_exp . then statement_list optional_elseif optional_else end_if   (rule 11)

    THEN	shift, and go to state 83

    then	go to state 84



state 58

    bool_exp  ->  relation_and_exp . relation_and_exp_list   (rule 28)

    OR  	shift, and go to state 85

    OR  	[reduce using rule 31 (relation_and_exp_list)]
    $default	reduce using rule 31 (relation_and_exp_list)

    relation_and_exp_list	go to state 86
    or  	go to state 87



state 59

    relation_and_exp  ->  relation_exp . relation_exp_list   (rule 32)

    AND 	shift, and go to state 88

    AND 	[reduce using rule 35 (relation_exp_list)]
    $default	reduce using rule 35 (relation_exp_list)

    relation_exp_list	go to state 89
    and 	go to state 90



state 60

    relation_exp  ->  expression . comp expression   (rule 40)

    EQ  	shift, and go to state 91
    NEQ 	shift, and go to state 92
    LT  	shift, and go to state 93
    GT  	shift, and go to state 94
    LTE 	shift, and go to state 95
    GTE 	shift, and go to state 96

    comp	go to state 97
    equal_to	go to state 98
    not_equal_to	go to state 99
    less_than	go to state 100
    greater_than	go to state 101
    less_than_or_equal_to	go to state 102
    greater_than_or_equal_to	go to state 103



state 61

    expression  ->  multiplicative_exp . multiplicative_exp_list   (rule 50)

    SUB 	shift, and go to state 54
    ADD 	shift, and go to state 104

    SUB 	[reduce using rule 55 (multiplicative_exp_list)]
    ADD 	[reduce using rule 55 (multiplicative_exp_list)]
    $default	reduce using rule 55 (multiplicative_exp_list)

    multiplicative_exp_list	go to state 105
    add 	go to state 106
    sub 	go to state 107



state 62

    multiplicative_exp  ->  term . term_list   (rule 56)

    MULT	shift, and go to state 108
    DIV 	shift, and go to state 109
    MOD 	shift, and go to state 110

    MULT	[reduce using rule 63 (term_list)]
    DIV 	[reduce using rule 63 (term_list)]
    MOD 	[reduce using rule 63 (term_list)]
    $default	reduce using rule 63 (term_list)

    term_list	go to state 111
    multiply	go to state 112
    divide	go to state 113
    mod 	go to state 114



state 63

    term  ->  var .   (rule 67)

    $default	reduce using rule 67 (term)



state 64

    term  ->  number .   (rule 68)

    $default	reduce using rule 68 (term)



state 65

    relation_exp  ->  l_paren . bool_exp r_paren   (rule 43)
    term  ->  l_paren . expression r_paren   (rule 69)

    NOT 	shift, and go to state 51
    TRUE	shift, and go to state 52
    FALSE	shift, and go to state 53
    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    bool_exp	go to state 115
    relation_and_exp	go to state 58
    relation_exp	go to state 59
    expression	go to state 116
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 65
    not 	go to state 66
    true	go to state 67
    false	go to state 68
    sub 	go to state 69



state 66

    relation_exp  ->  not . expression comp expression   (rule 36)
    relation_exp  ->  not . true   (rule 37)
    relation_exp  ->  not . false   (rule 38)
    relation_exp  ->  not . l_paren bool_exp r_paren   (rule 39)

    TRUE	shift, and go to state 52
    FALSE	shift, and go to state 53
    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    expression	go to state 117
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 118
    true	go to state 119
    false	go to state 120
    sub 	go to state 69



state 67

    relation_exp  ->  true .   (rule 41)

    $default	reduce using rule 41 (relation_exp)



state 68

    relation_exp  ->  false .   (rule 42)

    $default	reduce using rule 42 (relation_exp)



state 69

    term  ->  sub . var   (rule 64)
    term  ->  sub . number var   (rule 65)
    term  ->  sub . l_paren expression r_paren   (rule 66)

    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    var 	go to state 121
    identifier	go to state 32
    number	go to state 122
    l_paren	go to state 123



state 70

    statement  ->  while bool_exp . begin_loop statement_list end_loop   (rule 12)

    BEGINLOOP	shift, and go to state 71

    begin_loop	go to state 124



state 71

    begin_loop  ->  BEGINLOOP .   (rule 95)

    $default	reduce using rule 95 (begin_loop)



state 72

    statement  ->  do begin_loop . statement_list dend_loop while bool_exp   (rule 13)

    IF  	shift, and go to state 21
    WHILE	shift, and go to state 22
    DO  	shift, and go to state 23
    BREAK	shift, and go to state 24
    CONTINUE	shift, and go to state 25
    EXIT	shift, and go to state 26
    READ	shift, and go to state 27
    WRITE	shift, and go to state 28
    IDENT	shift, and go to state 4

    statement	go to state 29
    statement_list	go to state 125
    var 	go to state 31
    identifier	go to state 32
    if  	go to state 33
    while	go to state 34
    do  	go to state 35
    read	go to state 36
    write	go to state 37
    break	go to state 38
    continue	go to state 39
    exit	go to state 40



state 73

    statement  ->  read var_list .   (rule 14)
    var_list  ->  var_list . comma var   (rule 24)

    COMMA	shift, and go to state 17

    $default	reduce using rule 14 (statement)

    comma	go to state 126



state 74

    var_list  ->  var .   (rule 25)

    $default	reduce using rule 25 (var_list)



state 75

    statement  ->  write var_list .   (rule 15)
    var_list  ->  var_list . comma var   (rule 24)

    COMMA	shift, and go to state 17

    $default	reduce using rule 15 (statement)

    comma	go to state 126



state 76

    integer  ->  INTEGER .   (rule 86)

    $default	reduce using rule 86 (integer)



state 77

    declaration  ->  identifier_list colon optional_array integer .   (rule 5)

    $default	reduce using rule 5 (declaration)



state 78

    optional_array  ->  array l_bracket . number r_bracket of   (rule 8)

    NUMBER	shift, and go to state 56

    number	go to state 127



state 79

    statement_list  ->  statement_list statement semicolon .   (rule 26)

    $default	reduce using rule 26 (statement_list)



state 80

    statement  ->  var assign expression .   (rule 10)

    $default	reduce using rule 10 (statement)



state 81

    term  ->  l_paren . expression r_paren   (rule 69)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    expression	go to state 128
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 82

    var  ->  identifier l_bracket expression . r_bracket   (rule 71)

    R_BRACKET	shift, and go to state 129

    r_bracket	go to state 130



state 83

    then  ->  THEN .   (rule 90)

    $default	reduce using rule 90 (then)



state 84

    statement  ->  if bool_exp then . statement_list optional_elseif optional_else end_if   (rule 11)

    IF  	shift, and go to state 21
    WHILE	shift, and go to state 22
    DO  	shift, and go to state 23
    BREAK	shift, and go to state 24
    CONTINUE	shift, and go to state 25
    EXIT	shift, and go to state 26
    READ	shift, and go to state 27
    WRITE	shift, and go to state 28
    IDENT	shift, and go to state 4

    statement	go to state 29
    statement_list	go to state 131
    var 	go to state 31
    identifier	go to state 32
    if  	go to state 33
    while	go to state 34
    do  	go to state 35
    read	go to state 36
    write	go to state 37
    break	go to state 38
    continue	go to state 39
    exit	go to state 40



state 85

    or  ->  OR .   (rule 104)

    $default	reduce using rule 104 (or)



state 86

    bool_exp  ->  relation_and_exp relation_and_exp_list .   (rule 28)
    relation_and_exp_list  ->  relation_and_exp_list . or relation_and_exp   (rule 29)

    OR  	shift, and go to state 85

    $default	reduce using rule 28 (bool_exp)

    or  	go to state 132



state 87

    relation_and_exp_list  ->  or . relation_and_exp   (rule 30)

    NOT 	shift, and go to state 51
    TRUE	shift, and go to state 52
    FALSE	shift, and go to state 53
    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    relation_and_exp	go to state 133
    relation_exp	go to state 59
    expression	go to state 60
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 65
    not 	go to state 66
    true	go to state 67
    false	go to state 68
    sub 	go to state 69



state 88

    and  ->  AND .   (rule 105)

    $default	reduce using rule 105 (and)



state 89

    relation_and_exp  ->  relation_exp relation_exp_list .   (rule 32)
    relation_exp_list  ->  relation_exp_list . and relation_exp   (rule 33)

    AND 	shift, and go to state 88

    $default	reduce using rule 32 (relation_and_exp)

    and 	go to state 134



state 90

    relation_exp_list  ->  and . relation_exp   (rule 34)

    NOT 	shift, and go to state 51
    TRUE	shift, and go to state 52
    FALSE	shift, and go to state 53
    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    relation_exp	go to state 135
    expression	go to state 60
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 65
    not 	go to state 66
    true	go to state 67
    false	go to state 68
    sub 	go to state 69



state 91

    equal_to  ->  EQ .   (rule 109)

    $default	reduce using rule 109 (equal_to)



state 92

    not_equal_to  ->  NEQ .   (rule 110)

    $default	reduce using rule 110 (not_equal_to)



state 93

    less_than  ->  LT .   (rule 111)

    $default	reduce using rule 111 (less_than)



state 94

    greater_than  ->  GT .   (rule 112)

    $default	reduce using rule 112 (greater_than)



state 95

    less_than_or_equal_to  ->  LTE .   (rule 113)

    $default	reduce using rule 113 (less_than_or_equal_to)



state 96

    greater_than_or_equal_to  ->  GTE .   (rule 114)

    $default	reduce using rule 114 (greater_than_or_equal_to)



state 97

    relation_exp  ->  expression comp . expression   (rule 40)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    expression	go to state 136
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 98

    comp  ->  equal_to .   (rule 44)

    $default	reduce using rule 44 (comp)



state 99

    comp  ->  not_equal_to .   (rule 45)

    $default	reduce using rule 45 (comp)



state 100

    comp  ->  less_than .   (rule 46)

    $default	reduce using rule 46 (comp)



state 101

    comp  ->  greater_than .   (rule 47)

    $default	reduce using rule 47 (comp)



state 102

    comp  ->  less_than_or_equal_to .   (rule 48)

    $default	reduce using rule 48 (comp)



state 103

    comp  ->  greater_than_or_equal_to .   (rule 49)

    $default	reduce using rule 49 (comp)



state 104

    add  ->  ADD .   (rule 115)

    $default	reduce using rule 115 (add)



state 105

    expression  ->  multiplicative_exp multiplicative_exp_list .   (rule 50)
    multiplicative_exp_list  ->  multiplicative_exp_list . add multiplicative_exp   (rule 51)
    multiplicative_exp_list  ->  multiplicative_exp_list . sub multiplicative_exp   (rule 52)

    SUB 	shift, and go to state 54
    ADD 	shift, and go to state 104

    $default	reduce using rule 50 (expression)

    add 	go to state 137
    sub 	go to state 138



state 106

    multiplicative_exp_list  ->  add . multiplicative_exp   (rule 53)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    multiplicative_exp	go to state 139
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 107

    multiplicative_exp_list  ->  sub . multiplicative_exp   (rule 54)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    multiplicative_exp	go to state 140
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 108

    multiply  ->  MULT .   (rule 117)

    $default	reduce using rule 117 (multiply)



state 109

    divide  ->  DIV .   (rule 118)

    $default	reduce using rule 118 (divide)



state 110

    mod  ->  MOD .   (rule 119)

    $default	reduce using rule 119 (mod)



state 111

    multiplicative_exp  ->  term term_list .   (rule 56)
    term_list  ->  term_list . multiply term   (rule 57)
    term_list  ->  term_list . divide term   (rule 58)
    term_list  ->  term_list . mod term   (rule 59)

    MULT	shift, and go to state 108
    DIV 	shift, and go to state 109
    MOD 	shift, and go to state 110

    $default	reduce using rule 56 (multiplicative_exp)

    multiply	go to state 141
    divide	go to state 142
    mod 	go to state 143



state 112

    term_list  ->  multiply . term   (rule 60)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    term	go to state 144
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 113

    term_list  ->  divide . term   (rule 61)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    term	go to state 145
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 114

    term_list  ->  mod . term   (rule 62)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    term	go to state 146
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 115

    relation_exp  ->  l_paren bool_exp . r_paren   (rule 43)

    R_PAREN	shift, and go to state 147

    r_paren	go to state 148



state 116

    relation_exp  ->  expression . comp expression   (rule 40)
    term  ->  l_paren expression . r_paren   (rule 69)

    EQ  	shift, and go to state 91
    NEQ 	shift, and go to state 92
    LT  	shift, and go to state 93
    GT  	shift, and go to state 94
    LTE 	shift, and go to state 95
    GTE 	shift, and go to state 96
    R_PAREN	shift, and go to state 147

    comp	go to state 97
    r_paren	go to state 149
    equal_to	go to state 98
    not_equal_to	go to state 99
    less_than	go to state 100
    greater_than	go to state 101
    less_than_or_equal_to	go to state 102
    greater_than_or_equal_to	go to state 103



state 117

    relation_exp  ->  not expression . comp expression   (rule 36)

    EQ  	shift, and go to state 91
    NEQ 	shift, and go to state 92
    LT  	shift, and go to state 93
    GT  	shift, and go to state 94
    LTE 	shift, and go to state 95
    GTE 	shift, and go to state 96

    comp	go to state 150
    equal_to	go to state 98
    not_equal_to	go to state 99
    less_than	go to state 100
    greater_than	go to state 101
    less_than_or_equal_to	go to state 102
    greater_than_or_equal_to	go to state 103



state 118

    relation_exp  ->  not l_paren . bool_exp r_paren   (rule 39)
    term  ->  l_paren . expression r_paren   (rule 69)

    NOT 	shift, and go to state 51
    TRUE	shift, and go to state 52
    FALSE	shift, and go to state 53
    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    bool_exp	go to state 151
    relation_and_exp	go to state 58
    relation_exp	go to state 59
    expression	go to state 116
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 65
    not 	go to state 66
    true	go to state 67
    false	go to state 68
    sub 	go to state 69



state 119

    relation_exp  ->  not true .   (rule 37)

    $default	reduce using rule 37 (relation_exp)



state 120

    relation_exp  ->  not false .   (rule 38)

    $default	reduce using rule 38 (relation_exp)



state 121

    term  ->  sub var .   (rule 64)

    $default	reduce using rule 64 (term)



state 122

    term  ->  sub number . var   (rule 65)

    IDENT	shift, and go to state 4

    var 	go to state 152
    identifier	go to state 32



state 123

    term  ->  sub l_paren . expression r_paren   (rule 66)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    expression	go to state 153
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 124

    statement  ->  while bool_exp begin_loop . statement_list end_loop   (rule 12)

    IF  	shift, and go to state 21
    WHILE	shift, and go to state 22
    DO  	shift, and go to state 23
    BREAK	shift, and go to state 24
    CONTINUE	shift, and go to state 25
    EXIT	shift, and go to state 26
    READ	shift, and go to state 27
    WRITE	shift, and go to state 28
    IDENT	shift, and go to state 4

    statement	go to state 29
    statement_list	go to state 154
    var 	go to state 31
    identifier	go to state 32
    if  	go to state 33
    while	go to state 34
    do  	go to state 35
    read	go to state 36
    write	go to state 37
    break	go to state 38
    continue	go to state 39
    exit	go to state 40



state 125

    statement  ->  do begin_loop statement_list . dend_loop while bool_exp   (rule 13)
    statement_list  ->  statement_list . statement semicolon   (rule 26)

    IF  	shift, and go to state 21
    WHILE	shift, and go to state 22
    DO  	shift, and go to state 23
    ENDLOOP	shift, and go to state 155
    BREAK	shift, and go to state 24
    CONTINUE	shift, and go to state 25
    EXIT	shift, and go to state 26
    READ	shift, and go to state 27
    WRITE	shift, and go to state 28
    IDENT	shift, and go to state 4

    statement	go to state 46
    var 	go to state 31
    identifier	go to state 32
    if  	go to state 33
    while	go to state 34
    dend_loop	go to state 156
    do  	go to state 35
    read	go to state 36
    write	go to state 37
    break	go to state 38
    continue	go to state 39
    exit	go to state 40



state 126

    var_list  ->  var_list comma . var   (rule 24)

    IDENT	shift, and go to state 4

    var 	go to state 157
    identifier	go to state 32



state 127

    optional_array  ->  array l_bracket number . r_bracket of   (rule 8)

    R_BRACKET	shift, and go to state 129

    r_bracket	go to state 158



state 128

    term  ->  l_paren expression . r_paren   (rule 69)

    R_PAREN	shift, and go to state 147

    r_paren	go to state 149



state 129

    r_bracket  ->  R_BRACKET .   (rule 82)

    $default	reduce using rule 82 (r_bracket)



state 130

    var  ->  identifier l_bracket expression r_bracket .   (rule 71)

    $default	reduce using rule 71 (var)



state 131

    statement  ->  if bool_exp then statement_list . optional_elseif optional_else end_if   (rule 11)
    statement_list  ->  statement_list . statement semicolon   (rule 26)

    IF  	shift, and go to state 21
    ELSEIF	shift, and go to state 159
    WHILE	shift, and go to state 22
    DO  	shift, and go to state 23
    BREAK	shift, and go to state 24
    CONTINUE	shift, and go to state 25
    EXIT	shift, and go to state 26
    READ	shift, and go to state 27
    WRITE	shift, and go to state 28
    IDENT	shift, and go to state 4

    ELSEIF	[reduce using rule 21 (optional_elseif)]
    $default	reduce using rule 21 (optional_elseif)

    statement	go to state 46
    optional_elseif	go to state 160
    var 	go to state 31
    identifier	go to state 32
    if  	go to state 33
    elseif	go to state 161
    while	go to state 34
    do  	go to state 35
    read	go to state 36
    write	go to state 37
    break	go to state 38
    continue	go to state 39
    exit	go to state 40



state 132

    relation_and_exp_list  ->  relation_and_exp_list or . relation_and_exp   (rule 29)

    NOT 	shift, and go to state 51
    TRUE	shift, and go to state 52
    FALSE	shift, and go to state 53
    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    relation_and_exp	go to state 162
    relation_exp	go to state 59
    expression	go to state 60
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 65
    not 	go to state 66
    true	go to state 67
    false	go to state 68
    sub 	go to state 69



state 133

    relation_and_exp_list  ->  or relation_and_exp .   (rule 30)

    $default	reduce using rule 30 (relation_and_exp_list)



state 134

    relation_exp_list  ->  relation_exp_list and . relation_exp   (rule 33)

    NOT 	shift, and go to state 51
    TRUE	shift, and go to state 52
    FALSE	shift, and go to state 53
    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    relation_exp	go to state 163
    expression	go to state 60
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 65
    not 	go to state 66
    true	go to state 67
    false	go to state 68
    sub 	go to state 69



state 135

    relation_exp_list  ->  and relation_exp .   (rule 34)

    $default	reduce using rule 34 (relation_exp_list)



state 136

    relation_exp  ->  expression comp expression .   (rule 40)

    $default	reduce using rule 40 (relation_exp)



state 137

    multiplicative_exp_list  ->  multiplicative_exp_list add . multiplicative_exp   (rule 51)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    multiplicative_exp	go to state 164
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 138

    multiplicative_exp_list  ->  multiplicative_exp_list sub . multiplicative_exp   (rule 52)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    multiplicative_exp	go to state 165
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 139

    multiplicative_exp_list  ->  add multiplicative_exp .   (rule 53)

    $default	reduce using rule 53 (multiplicative_exp_list)



state 140

    multiplicative_exp_list  ->  sub multiplicative_exp .   (rule 54)

    $default	reduce using rule 54 (multiplicative_exp_list)



state 141

    term_list  ->  term_list multiply . term   (rule 57)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    term	go to state 166
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 142

    term_list  ->  term_list divide . term   (rule 58)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    term	go to state 167
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 143

    term_list  ->  term_list mod . term   (rule 59)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    term	go to state 168
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 144

    term_list  ->  multiply term .   (rule 60)

    $default	reduce using rule 60 (term_list)



state 145

    term_list  ->  divide term .   (rule 61)

    $default	reduce using rule 61 (term_list)



state 146

    term_list  ->  mod term .   (rule 62)

    $default	reduce using rule 62 (term_list)



state 147

    r_paren  ->  R_PAREN .   (rule 84)

    $default	reduce using rule 84 (r_paren)



state 148

    relation_exp  ->  l_paren bool_exp r_paren .   (rule 43)

    $default	reduce using rule 43 (relation_exp)



state 149

    term  ->  l_paren expression r_paren .   (rule 69)

    $default	reduce using rule 69 (term)



state 150

    relation_exp  ->  not expression comp . expression   (rule 36)

    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    expression	go to state 169
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 81
    sub 	go to state 69



state 151

    relation_exp  ->  not l_paren bool_exp . r_paren   (rule 39)

    R_PAREN	shift, and go to state 147

    r_paren	go to state 170



state 152

    term  ->  sub number var .   (rule 65)

    $default	reduce using rule 65 (term)



state 153

    term  ->  sub l_paren expression . r_paren   (rule 66)

    R_PAREN	shift, and go to state 147

    r_paren	go to state 171



state 154

    statement  ->  while bool_exp begin_loop statement_list . end_loop   (rule 12)
    statement_list  ->  statement_list . statement semicolon   (rule 26)

    IF  	shift, and go to state 21
    WHILE	shift, and go to state 22
    DO  	shift, and go to state 23
    ENDLOOP	shift, and go to state 172
    BREAK	shift, and go to state 24
    CONTINUE	shift, and go to state 25
    EXIT	shift, and go to state 26
    READ	shift, and go to state 27
    WRITE	shift, and go to state 28
    IDENT	shift, and go to state 4

    statement	go to state 46
    var 	go to state 31
    identifier	go to state 32
    if  	go to state 33
    while	go to state 34
    end_loop	go to state 173
    do  	go to state 35
    read	go to state 36
    write	go to state 37
    break	go to state 38
    continue	go to state 39
    exit	go to state 40



state 155

    dend_loop  ->  ENDLOOP .   (rule 96)

    $default	reduce using rule 96 (dend_loop)



state 156

    statement  ->  do begin_loop statement_list dend_loop . while bool_exp   (rule 13)

    WHILE	shift, and go to state 22

    while	go to state 174



state 157

    var_list  ->  var_list comma var .   (rule 24)

    $default	reduce using rule 24 (var_list)



state 158

    optional_array  ->  array l_bracket number r_bracket . of   (rule 8)

    OF  	shift, and go to state 175

    of  	go to state 176



state 159

    elseif  ->  ELSEIF .   (rule 92)

    $default	reduce using rule 92 (elseif)



state 160

    statement  ->  if bool_exp then statement_list optional_elseif . optional_else end_if   (rule 11)
    optional_elseif  ->  optional_elseif . elseif bool_exp statement_list   (rule 19)

    ELSE	shift, and go to state 177
    ELSEIF	shift, and go to state 159

    $default	reduce using rule 23 (optional_else)

    optional_else	go to state 178
    elseif	go to state 179
    else	go to state 180



state 161

    optional_elseif  ->  elseif . bool_exp statement_list   (rule 20)

    NOT 	shift, and go to state 51
    TRUE	shift, and go to state 52
    FALSE	shift, and go to state 53
    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    bool_exp	go to state 181
    relation_and_exp	go to state 58
    relation_exp	go to state 59
    expression	go to state 60
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 65
    not 	go to state 66
    true	go to state 67
    false	go to state 68
    sub 	go to state 69



state 162

    relation_and_exp_list  ->  relation_and_exp_list or relation_and_exp .   (rule 29)

    $default	reduce using rule 29 (relation_and_exp_list)



state 163

    relation_exp_list  ->  relation_exp_list and relation_exp .   (rule 33)

    $default	reduce using rule 33 (relation_exp_list)



state 164

    multiplicative_exp_list  ->  multiplicative_exp_list add multiplicative_exp .   (rule 51)

    $default	reduce using rule 51 (multiplicative_exp_list)



state 165

    multiplicative_exp_list  ->  multiplicative_exp_list sub multiplicative_exp .   (rule 52)

    $default	reduce using rule 52 (multiplicative_exp_list)



state 166

    term_list  ->  term_list multiply term .   (rule 57)

    $default	reduce using rule 57 (term_list)



state 167

    term_list  ->  term_list divide term .   (rule 58)

    $default	reduce using rule 58 (term_list)



state 168

    term_list  ->  term_list mod term .   (rule 59)

    $default	reduce using rule 59 (term_list)



state 169

    relation_exp  ->  not expression comp expression .   (rule 36)

    $default	reduce using rule 36 (relation_exp)



state 170

    relation_exp  ->  not l_paren bool_exp r_paren .   (rule 39)

    $default	reduce using rule 39 (relation_exp)



state 171

    term  ->  sub l_paren expression r_paren .   (rule 66)

    $default	reduce using rule 66 (term)



state 172

    end_loop  ->  ENDLOOP .   (rule 97)

    $default	reduce using rule 97 (end_loop)



state 173

    statement  ->  while bool_exp begin_loop statement_list end_loop .   (rule 12)

    $default	reduce using rule 12 (statement)



state 174

    statement  ->  do begin_loop statement_list dend_loop while . bool_exp   (rule 13)

    NOT 	shift, and go to state 51
    TRUE	shift, and go to state 52
    FALSE	shift, and go to state 53
    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    bool_exp	go to state 182
    relation_and_exp	go to state 58
    relation_exp	go to state 59
    expression	go to state 60
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 65
    not 	go to state 66
    true	go to state 67
    false	go to state 68
    sub 	go to state 69



state 175

    of  ->  OF .   (rule 85)

    $default	reduce using rule 85 (of)



state 176

    optional_array  ->  array l_bracket number r_bracket of .   (rule 8)

    $default	reduce using rule 8 (optional_array)



state 177

    else  ->  ELSE .   (rule 93)

    $default	reduce using rule 93 (else)



state 178

    statement  ->  if bool_exp then statement_list optional_elseif optional_else . end_if   (rule 11)

    ENDIF	shift, and go to state 183

    end_if	go to state 184



state 179

    optional_elseif  ->  optional_elseif elseif . bool_exp statement_list   (rule 19)

    NOT 	shift, and go to state 51
    TRUE	shift, and go to state 52
    FALSE	shift, and go to state 53
    SUB 	shift, and go to state 54
    L_PAREN	shift, and go to state 55
    NUMBER	shift, and go to state 56
    IDENT	shift, and go to state 4

    bool_exp	go to state 185
    relation_and_exp	go to state 58
    relation_exp	go to state 59
    expression	go to state 60
    multiplicative_exp	go to state 61
    term	go to state 62
    var 	go to state 63
    identifier	go to state 32
    number	go to state 64
    l_paren	go to state 65
    not 	go to state 66
    true	go to state 67
    false	go to state 68
    sub 	go to state 69



state 180

    optional_else  ->  else . statement_list   (rule 22)

    IF  	shift, and go to state 21
    WHILE	shift, and go to state 22
    DO  	shift, and go to state 23
    BREAK	shift, and go to state 24
    CONTINUE	shift, and go to state 25
    EXIT	shift, and go to state 26
    READ	shift, and go to state 27
    WRITE	shift, and go to state 28
    IDENT	shift, and go to state 4

    statement	go to state 29
    statement_list	go to state 186
    var 	go to state 31
    identifier	go to state 32
    if  	go to state 33
    while	go to state 34
    do  	go to state 35
    read	go to state 36
    write	go to state 37
    break	go to state 38
    continue	go to state 39
    exit	go to state 40



state 181

    optional_elseif  ->  elseif bool_exp . statement_list   (rule 20)

    IF  	shift, and go to state 21
    WHILE	shift, and go to state 22
    DO  	shift, and go to state 23
    BREAK	shift, and go to state 24
    CONTINUE	shift, and go to state 25
    EXIT	shift, and go to state 26
    READ	shift, and go to state 27
    WRITE	shift, and go to state 28
    IDENT	shift, and go to state 4

    statement	go to state 29
    statement_list	go to state 187
    var 	go to state 31
    identifier	go to state 32
    if  	go to state 33
    while	go to state 34
    do  	go to state 35
    read	go to state 36
    write	go to state 37
    break	go to state 38
    continue	go to state 39
    exit	go to state 40



state 182

    statement  ->  do begin_loop statement_list dend_loop while bool_exp .   (rule 13)

    $default	reduce using rule 13 (statement)



state 183

    end_if  ->  ENDIF .   (rule 91)

    $default	reduce using rule 91 (end_if)



state 184

    statement  ->  if bool_exp then statement_list optional_elseif optional_else end_if .   (rule 11)

    $default	reduce using rule 11 (statement)



state 185

    optional_elseif  ->  optional_elseif elseif bool_exp . statement_list   (rule 19)

    IF  	shift, and go to state 21
    WHILE	shift, and go to state 22
    DO  	shift, and go to state 23
    BREAK	shift, and go to state 24
    CONTINUE	shift, and go to state 25
    EXIT	shift, and go to state 26
    READ	shift, and go to state 27
    WRITE	shift, and go to state 28
    IDENT	shift, and go to state 4

    statement	go to state 29
    statement_list	go to state 188
    var 	go to state 31
    identifier	go to state 32
    if  	go to state 33
    while	go to state 34
    do  	go to state 35
    read	go to state 36
    write	go to state 37
    break	go to state 38
    continue	go to state 39
    exit	go to state 40



state 186

    optional_else  ->  else statement_list .   (rule 22)
    statement_list  ->  statement_list . statement semicolon   (rule 26)

    IF  	shift, and go to state 21
    WHILE	shift, and go to state 22
    DO  	shift, and go to state 23
    BREAK	shift, and go to state 24
    CONTINUE	shift, and go to state 25
    EXIT	shift, and go to state 26
    READ	shift, and go to state 27
    WRITE	shift, and go to state 28
    IDENT	shift, and go to state 4

    $default	reduce using rule 22 (optional_else)

    statement	go to state 46
    var 	go to state 31
    identifier	go to state 32
    if  	go to state 33
    while	go to state 34
    do  	go to state 35
    read	go to state 36
    write	go to state 37
    break	go to state 38
    continue	go to state 39
    exit	go to state 40



state 187

    optional_elseif  ->  elseif bool_exp statement_list .   (rule 20)
    statement_list  ->  statement_list . statement semicolon   (rule 26)

    IF  	shift, and go to state 21
    WHILE	shift, and go to state 22
    DO  	shift, and go to state 23
    BREAK	shift, and go to state 24
    CONTINUE	shift, and go to state 25
    EXIT	shift, and go to state 26
    READ	shift, and go to state 27
    WRITE	shift, and go to state 28
    IDENT	shift, and go to state 4

    $default	reduce using rule 20 (optional_elseif)

    statement	go to state 46
    var 	go to state 31
    identifier	go to state 32
    if  	go to state 33
    while	go to state 34
    do  	go to state 35
    read	go to state 36
    write	go to state 37
    break	go to state 38
    continue	go to state 39
    exit	go to state 40



state 188

    optional_elseif  ->  optional_elseif elseif bool_exp statement_list .   (rule 19)
    statement_list  ->  statement_list . statement semicolon   (rule 26)

    IF  	shift, and go to state 21
    WHILE	shift, and go to state 22
    DO  	shift, and go to state 23
    BREAK	shift, and go to state 24
    CONTINUE	shift, and go to state 25
    EXIT	shift, and go to state 26
    READ	shift, and go to state 27
    WRITE	shift, and go to state 28
    IDENT	shift, and go to state 4

    $default	reduce using rule 19 (optional_elseif)

    statement	go to state 46
    var 	go to state 31
    identifier	go to state 32
    if  	go to state 33
    while	go to state 34
    do  	go to state 35
    read	go to state 36
    write	go to state 37
    break	go to state 38
    continue	go to state 39
    exit	go to state 40



state 189

    $   	go to state 190



state 190

    $   	go to state 191



state 191

    $default	accept
