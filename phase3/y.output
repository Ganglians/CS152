Useless nonterminals:

   question


Terminals which are not used:

   QUESTION


Useless rules:

#89    question :	 QUESTION;


State 61 contains 1 shift/reduce conflict.
State 62 contains 1 shift/reduce conflict.
State 64 contains 2 shift/reduce conflicts.
State 65 contains 3 shift/reduce conflicts.
State 134 contains 1 shift/reduce conflict.

Grammar
rule 1    start -> program_start
rule 2    program_start -> program identifier semicolon block end_program
rule 3    block -> declaration_list begin_program statement_list
rule 4    declaration_list -> declaration_list declaration semicolon
rule 5    declaration_list -> declaration semicolon
rule 6    declaration -> identifier_list colon optional_array integer
rule 7    identifier_list -> identifier_list comma identifier
rule 8    identifier_list -> identifier
rule 9    optional_array -> array l_bracket number r_bracket of
rule 10   optional_array ->		/* empty */
rule 11   statement -> var assign expression
rule 12   statement -> if bool_exp then statement_list optional_elseif optional_else end_if
rule 13   statement -> while bool_exp begin_loop statement_list end_loop
rule 14   statement -> do begin_loop statement_list dend_loop while bool_exp
rule 15   statement -> read var_list
rule 16   statement -> write var_list
rule 17   statement -> break
rule 18   statement -> continue
rule 19   statement -> exit
rule 20   optional_elseif -> optional_elseif elseif bool_exp statement_list
rule 21   optional_elseif -> elseif bool_exp statement_list
rule 22   optional_elseif ->		/* empty */
rule 23   optional_else -> else statement_list
rule 24   optional_else ->		/* empty */
rule 25   var_list -> var_list comma var
rule 26   var_list -> var
rule 27   statement_list -> statement_list statement semicolon
rule 28   statement_list -> statement semicolon
rule 29   bool_exp -> relation_and_exp relation_and_exp_list
rule 30   relation_and_exp_list -> relation_and_exp_list or relation_and_exp
rule 31   relation_and_exp_list -> or relation_and_exp
rule 32   relation_and_exp_list ->		/* empty */
rule 33   relation_and_exp -> relation_exp relation_exp_list
rule 34   relation_exp_list -> relation_exp_list and relation_exp
rule 35   relation_exp_list -> and relation_exp
rule 36   relation_exp_list ->		/* empty */
rule 37   relation_exp -> not expression comp expression
rule 38   relation_exp -> not true
rule 39   relation_exp -> not false
rule 40   relation_exp -> not l_paren bool_exp r_paren
rule 41   relation_exp -> expression comp expression
rule 42   relation_exp -> true
rule 43   relation_exp -> false
rule 44   relation_exp -> l_paren bool_exp r_paren
rule 45   comp -> equal_to
rule 46   comp -> not_equal_to
rule 47   comp -> less_than
rule 48   comp -> greater_than
rule 49   comp -> less_than_or_equal_to
rule 50   comp -> greater_than_or_equal_to
rule 51   expression -> multiplicative_exp multiplicative_exp_list
rule 52   multiplicative_exp_list -> multiplicative_exp_list add multiplicative_exp
rule 53   multiplicative_exp_list -> multiplicative_exp_list sub multiplicative_exp
rule 54   multiplicative_exp_list -> add multiplicative_exp
rule 55   multiplicative_exp_list -> sub multiplicative_exp
rule 56   multiplicative_exp_list ->		/* empty */
rule 57   multiplicative_exp -> term term_list
rule 58   term_list -> term_list multiply term
rule 59   term_list -> term_list divide term
rule 60   term_list -> term_list mod term
rule 61   term_list -> multiply term
rule 62   term_list -> divide term
rule 63   term_list -> mod term
rule 64   term_list ->		/* empty */
rule 65   term -> sub var
rule 66   term -> sub number var
rule 67   term -> sub l_paren expression r_paren
rule 68   term -> var
rule 69   term -> number
rule 70   term -> l_paren expression r_paren
rule 71   var -> identifier
rule 72   var -> identifier l_bracket expression r_bracket
rule 73   program -> PROGRAM
rule 74   identifier -> IDENT
rule 75   semicolon -> SEMICOLON
rule 76   end_program -> END_PROGRAM
rule 77   begin_program -> BEGIN_PROGRAM
rule 78   comma -> COMMA
rule 79   colon -> COLON
rule 80   array -> ARRAY
rule 81   l_bracket -> L_BRACKET
rule 82   number -> NUMBER
rule 83   r_bracket -> R_BRACKET
rule 84   l_paren -> L_PAREN
rule 85   r_paren -> R_PAREN
rule 86   of -> OF
rule 87   integer -> INTEGER
rule 88   assign -> ASSIGN
rule 90   if -> IF
rule 91   then -> THEN
rule 92   end_if -> ENDIF
rule 93   elseif -> ELSEIF
rule 94   else -> ELSE
rule 95   while -> WHILE
rule 96   begin_loop -> BEGINLOOP
rule 97   dend_loop -> ENDLOOP
rule 98   end_loop -> ENDLOOP
rule 99   do -> DO
rule 100  read -> READ
rule 101  write -> WRITE
rule 102  break -> BREAK
rule 103  continue -> CONTINUE
rule 104  exit -> EXIT
rule 105  or -> OR
rule 106  and -> AND
rule 107  not -> NOT
rule 108  true -> TRUE
rule 109  false -> FALSE
rule 110  equal_to -> EQ
rule 111  not_equal_to -> NEQ
rule 112  less_than -> LT
rule 113  greater_than -> GT
rule 114  less_than_or_equal_to -> LTE
rule 115  greater_than_or_equal_to -> GTE
rule 116  add -> ADD
rule 117  sub -> SUB
rule 118  multiply -> MULT
rule 119  divide -> DIV
rule 120  mod -> MOD

Terminals, with rules where they appear

$ (-1)
error (256)
PROGRAM (258) 73
BEGIN_PROGRAM (259) 77
END_PROGRAM (260) 76
INTEGER (261) 87
ARRAY (262) 80
OF (263) 86
IF (264) 90
THEN (265) 91
ENDIF (266) 92
ELSE (267) 94
ELSEIF (268) 93
WHILE (269) 95
DO (270) 99
BEGINLOOP (271) 96
ENDLOOP (272) 97 98
BREAK (273) 102
CONTINUE (274) 103
EXIT (275) 104
READ (276) 100
WRITE (277) 101
AND (278) 106
OR (279) 105
NOT (280) 107
TRUE (281) 108
FALSE (282) 109
SUB (283) 117
ADD (284) 116
MULT (285) 118
DIV (286) 119
MOD (287) 120
EQ (288) 110
NEQ (289) 111
LT (290) 112
GT (291) 113
LTE (292) 114
GTE (293) 115
SEMICOLON (294) 75
COLON (295) 79
COMMA (296) 78
QUESTION (297) 89
L_BRACKET (298) 81
R_BRACKET (299) 83
L_PAREN (300) 84
R_PAREN (301) 85
ASSIGN (302) 88
NUMBER (303) 82
IDENT (304) 74
NEG (305)

Nonterminals, with rules where they appear

start (51)
    on left: 1
program_start (52)
    on left: 2, on right: 1
block (53)
    on left: 3, on right: 2
declaration_list (54)
    on left: 4 5, on right: 3 4
declaration (55)
    on left: 6, on right: 4 5
identifier_list (56)
    on left: 7 8, on right: 6 7
optional_array (57)
    on left: 9 10, on right: 6
statement (58)
    on left: 11 12 13 14 15 16 17 18 19, on right: 27 28
optional_elseif (59)
    on left: 20 21 22, on right: 12 20
optional_else (60)
    on left: 23 24, on right: 12
var_list (61)
    on left: 25 26, on right: 15 16 25
statement_list (62)
    on left: 27 28, on right: 3 12 13 14 20 21 23 27
bool_exp (63)
    on left: 29, on right: 12 13 14 20 21 40 44
relation_and_exp_list (64)
    on left: 30 31 32, on right: 29 30
relation_and_exp (65)
    on left: 33, on right: 29 30 31
relation_exp_list (66)
    on left: 34 35 36, on right: 33 34
relation_exp (67)
    on left: 37 38 39 40 41 42 43 44, on right: 33 34 35
comp (68)
    on left: 45 46 47 48 49 50, on right: 37 41
expression (69)
    on left: 51, on right: 11 37 41 67 70 72
multiplicative_exp_list (70)
    on left: 52 53 54 55 56, on right: 51 52 53
multiplicative_exp (71)
    on left: 57, on right: 51 52 53 54 55
term_list (72)
    on left: 58 59 60 61 62 63 64, on right: 57 58 59 60
term (73)
    on left: 65 66 67 68 69 70, on right: 57 58 59 60 61 62 63
var (74)
    on left: 71 72, on right: 11 25 26 65 66 68
program (75)
    on left: 73, on right: 2
identifier (76)
    on left: 74, on right: 2 7 8 71 72
semicolon (77)
    on left: 75, on right: 2 4 5 27 28
end_program (78)
    on left: 76, on right: 2
begin_program (79)
    on left: 77, on right: 3
comma (80)
    on left: 78, on right: 7 25
colon (81)
    on left: 79, on right: 6
array (82)
    on left: 80, on right: 9
l_bracket (83)
    on left: 81, on right: 9 72
number (84)
    on left: 82, on right: 9 66 69
r_bracket (85)
    on left: 83, on right: 9 72
l_paren (86)
    on left: 84, on right: 40 44 67 70
r_paren (87)
    on left: 85, on right: 40 44 67 70
of (88)
    on left: 86, on right: 9
integer (89)
    on left: 87, on right: 6
assign (90)
    on left: 88, on right: 11
if (91)
    on left: 90, on right: 12
then (92)
    on left: 91, on right: 12
end_if (93)
    on left: 92, on right: 12
elseif (94)
    on left: 93, on right: 20 21
else (95)
    on left: 94, on right: 23
while (96)
    on left: 95, on right: 13 14
begin_loop (97)
    on left: 96, on right: 13 14
dend_loop (98)
    on left: 97, on right: 14
end_loop (99)
    on left: 98, on right: 13
do (100)
    on left: 99, on right: 14
read (101)
    on left: 100, on right: 15
write (102)
    on left: 101, on right: 16
break (103)
    on left: 102, on right: 17
continue (104)
    on left: 103, on right: 18
exit (105)
    on left: 104, on right: 19
or (106)
    on left: 105, on right: 30 31
and (107)
    on left: 106, on right: 34 35
not (108)
    on left: 107, on right: 37 38 39 40
true (109)
    on left: 108, on right: 38 42
false (110)
    on left: 109, on right: 39 43
equal_to (111)
    on left: 110, on right: 45
not_equal_to (112)
    on left: 111, on right: 46
less_than (113)
    on left: 112, on right: 47
greater_than (114)
    on left: 113, on right: 48
less_than_or_equal_to (115)
    on left: 114, on right: 49
greater_than_or_equal_to (116)
    on left: 115, on right: 50
add (117)
    on left: 116, on right: 52 54
sub (118)
    on left: 117, on right: 53 55 65 66 67
multiply (119)
    on left: 118, on right: 58 61
divide (120)
    on left: 119, on right: 59 62
mod (121)
    on left: 120, on right: 60 63


state 0

    PROGRAM	shift, and go to state 1

    start	go to state 192
    program_start	go to state 2
    program	go to state 3



state 1

    program  ->  PROGRAM .   (rule 73)

    $default	reduce using rule 73 (program)



state 2

    start  ->  program_start .   (rule 1)

    $default	reduce using rule 1 (start)



state 3

    program_start  ->  program . identifier semicolon block end_program   (rule 2)

    IDENT	shift, and go to state 4

    identifier	go to state 5



state 4

    identifier  ->  IDENT .   (rule 74)

    $default	reduce using rule 74 (identifier)



state 5

    program_start  ->  program identifier . semicolon block end_program   (rule 2)

    SEMICOLON	shift, and go to state 6

    semicolon	go to state 7



state 6

    semicolon  ->  SEMICOLON .   (rule 75)

    $default	reduce using rule 75 (semicolon)



state 7

    program_start  ->  program identifier semicolon . block end_program   (rule 2)

    IDENT	shift, and go to state 4

    block	go to state 8
    declaration_list	go to state 9
    declaration	go to state 10
    identifier_list	go to state 11
    identifier	go to state 12



state 8

    program_start  ->  program identifier semicolon block . end_program   (rule 2)

    END_PROGRAM	shift, and go to state 13

    end_program	go to state 14



state 9

    block  ->  declaration_list . begin_program statement_list   (rule 3)
    declaration_list  ->  declaration_list . declaration semicolon   (rule 4)

    BEGIN_PROGRAM	shift, and go to state 15
    IDENT	shift, and go to state 4

    declaration	go to state 16
    identifier_list	go to state 11
    identifier	go to state 12
    begin_program	go to state 17



state 10

    declaration_list  ->  declaration . semicolon   (rule 5)

    SEMICOLON	shift, and go to state 6

    semicolon	go to state 18



state 11

    declaration  ->  identifier_list . colon optional_array integer   (rule 6)
    identifier_list  ->  identifier_list . comma identifier   (rule 7)

    COLON	shift, and go to state 19
    COMMA	shift, and go to state 20

    comma	go to state 21
    colon	go to state 22



state 12

    identifier_list  ->  identifier .   (rule 8)

    $default	reduce using rule 8 (identifier_list)



state 13

    end_program  ->  END_PROGRAM .   (rule 76)

    $default	reduce using rule 76 (end_program)



state 14

    program_start  ->  program identifier semicolon block end_program .   (rule 2)

    $default	reduce using rule 2 (program_start)



state 15

    begin_program  ->  BEGIN_PROGRAM .   (rule 77)

    $default	reduce using rule 77 (begin_program)



state 16

    declaration_list  ->  declaration_list declaration . semicolon   (rule 4)

    SEMICOLON	shift, and go to state 6

    semicolon	go to state 23



state 17

    block  ->  declaration_list begin_program . statement_list   (rule 3)

    IF  	shift, and go to state 24
    WHILE	shift, and go to state 25
    DO  	shift, and go to state 26
    BREAK	shift, and go to state 27
    CONTINUE	shift, and go to state 28
    EXIT	shift, and go to state 29
    READ	shift, and go to state 30
    WRITE	shift, and go to state 31
    IDENT	shift, and go to state 4

    statement	go to state 32
    statement_list	go to state 33
    var 	go to state 34
    identifier	go to state 35
    if  	go to state 36
    while	go to state 37
    do  	go to state 38
    read	go to state 39
    write	go to state 40
    break	go to state 41
    continue	go to state 42
    exit	go to state 43



state 18

    declaration_list  ->  declaration semicolon .   (rule 5)

    $default	reduce using rule 5 (declaration_list)



state 19

    colon  ->  COLON .   (rule 79)

    $default	reduce using rule 79 (colon)



state 20

    comma  ->  COMMA .   (rule 78)

    $default	reduce using rule 78 (comma)



state 21

    identifier_list  ->  identifier_list comma . identifier   (rule 7)

    IDENT	shift, and go to state 4

    identifier	go to state 44



state 22

    declaration  ->  identifier_list colon . optional_array integer   (rule 6)

    ARRAY	shift, and go to state 45

    $default	reduce using rule 10 (optional_array)

    optional_array	go to state 46
    array	go to state 47



state 23

    declaration_list  ->  declaration_list declaration semicolon .   (rule 4)

    $default	reduce using rule 4 (declaration_list)



state 24

    if  ->  IF .   (rule 90)

    $default	reduce using rule 90 (if)



state 25

    while  ->  WHILE .   (rule 95)

    $default	reduce using rule 95 (while)



state 26

    do  ->  DO .   (rule 99)

    $default	reduce using rule 99 (do)



state 27

    break  ->  BREAK .   (rule 102)

    $default	reduce using rule 102 (break)



state 28

    continue  ->  CONTINUE .   (rule 103)

    $default	reduce using rule 103 (continue)



state 29

    exit  ->  EXIT .   (rule 104)

    $default	reduce using rule 104 (exit)



state 30

    read  ->  READ .   (rule 100)

    $default	reduce using rule 100 (read)



state 31

    write  ->  WRITE .   (rule 101)

    $default	reduce using rule 101 (write)



state 32

    statement_list  ->  statement . semicolon   (rule 28)

    SEMICOLON	shift, and go to state 6

    semicolon	go to state 48



state 33

    block  ->  declaration_list begin_program statement_list .   (rule 3)
    statement_list  ->  statement_list . statement semicolon   (rule 27)

    IF  	shift, and go to state 24
    WHILE	shift, and go to state 25
    DO  	shift, and go to state 26
    BREAK	shift, and go to state 27
    CONTINUE	shift, and go to state 28
    EXIT	shift, and go to state 29
    READ	shift, and go to state 30
    WRITE	shift, and go to state 31
    IDENT	shift, and go to state 4

    $default	reduce using rule 3 (block)

    statement	go to state 49
    var 	go to state 34
    identifier	go to state 35
    if  	go to state 36
    while	go to state 37
    do  	go to state 38
    read	go to state 39
    write	go to state 40
    break	go to state 41
    continue	go to state 42
    exit	go to state 43



state 34

    statement  ->  var . assign expression   (rule 11)

    ASSIGN	shift, and go to state 50

    assign	go to state 51



state 35

    var  ->  identifier .   (rule 71)
    var  ->  identifier . l_bracket expression r_bracket   (rule 72)

    L_BRACKET	shift, and go to state 52

    $default	reduce using rule 71 (var)

    l_bracket	go to state 53



state 36

    statement  ->  if . bool_exp then statement_list optional_elseif optional_else end_if   (rule 12)

    NOT 	shift, and go to state 54
    TRUE	shift, and go to state 55
    FALSE	shift, and go to state 56
    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    bool_exp	go to state 60
    relation_and_exp	go to state 61
    relation_exp	go to state 62
    expression	go to state 63
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 68
    not 	go to state 69
    true	go to state 70
    false	go to state 71
    sub 	go to state 72



state 37

    statement  ->  while . bool_exp begin_loop statement_list end_loop   (rule 13)

    NOT 	shift, and go to state 54
    TRUE	shift, and go to state 55
    FALSE	shift, and go to state 56
    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    bool_exp	go to state 73
    relation_and_exp	go to state 61
    relation_exp	go to state 62
    expression	go to state 63
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 68
    not 	go to state 69
    true	go to state 70
    false	go to state 71
    sub 	go to state 72



state 38

    statement  ->  do . begin_loop statement_list dend_loop while bool_exp   (rule 14)

    BEGINLOOP	shift, and go to state 74

    begin_loop	go to state 75



state 39

    statement  ->  read . var_list   (rule 15)

    IDENT	shift, and go to state 4

    var_list	go to state 76
    var 	go to state 77
    identifier	go to state 35



state 40

    statement  ->  write . var_list   (rule 16)

    IDENT	shift, and go to state 4

    var_list	go to state 78
    var 	go to state 77
    identifier	go to state 35



state 41

    statement  ->  break .   (rule 17)

    $default	reduce using rule 17 (statement)



state 42

    statement  ->  continue .   (rule 18)

    $default	reduce using rule 18 (statement)



state 43

    statement  ->  exit .   (rule 19)

    $default	reduce using rule 19 (statement)



state 44

    identifier_list  ->  identifier_list comma identifier .   (rule 7)

    $default	reduce using rule 7 (identifier_list)



state 45

    array  ->  ARRAY .   (rule 80)

    $default	reduce using rule 80 (array)



state 46

    declaration  ->  identifier_list colon optional_array . integer   (rule 6)

    INTEGER	shift, and go to state 79

    integer	go to state 80



state 47

    optional_array  ->  array . l_bracket number r_bracket of   (rule 9)

    L_BRACKET	shift, and go to state 52

    l_bracket	go to state 81



state 48

    statement_list  ->  statement semicolon .   (rule 28)

    $default	reduce using rule 28 (statement_list)



state 49

    statement_list  ->  statement_list statement . semicolon   (rule 27)

    SEMICOLON	shift, and go to state 6

    semicolon	go to state 82



state 50

    assign  ->  ASSIGN .   (rule 88)

    $default	reduce using rule 88 (assign)



state 51

    statement  ->  var assign . expression   (rule 11)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    expression	go to state 83
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 52

    l_bracket  ->  L_BRACKET .   (rule 81)

    $default	reduce using rule 81 (l_bracket)



state 53

    var  ->  identifier l_bracket . expression r_bracket   (rule 72)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    expression	go to state 85
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 54

    not  ->  NOT .   (rule 107)

    $default	reduce using rule 107 (not)



state 55

    true  ->  TRUE .   (rule 108)

    $default	reduce using rule 108 (true)



state 56

    false  ->  FALSE .   (rule 109)

    $default	reduce using rule 109 (false)



state 57

    sub  ->  SUB .   (rule 117)

    $default	reduce using rule 117 (sub)



state 58

    l_paren  ->  L_PAREN .   (rule 84)

    $default	reduce using rule 84 (l_paren)



state 59

    number  ->  NUMBER .   (rule 82)

    $default	reduce using rule 82 (number)



state 60

    statement  ->  if bool_exp . then statement_list optional_elseif optional_else end_if   (rule 12)

    THEN	shift, and go to state 86

    then	go to state 87



state 61

    bool_exp  ->  relation_and_exp . relation_and_exp_list   (rule 29)

    OR  	shift, and go to state 88

    OR  	[reduce using rule 32 (relation_and_exp_list)]
    $default	reduce using rule 32 (relation_and_exp_list)

    relation_and_exp_list	go to state 89
    or  	go to state 90



state 62

    relation_and_exp  ->  relation_exp . relation_exp_list   (rule 33)

    AND 	shift, and go to state 91

    AND 	[reduce using rule 36 (relation_exp_list)]
    $default	reduce using rule 36 (relation_exp_list)

    relation_exp_list	go to state 92
    and 	go to state 93



state 63

    relation_exp  ->  expression . comp expression   (rule 41)

    EQ  	shift, and go to state 94
    NEQ 	shift, and go to state 95
    LT  	shift, and go to state 96
    GT  	shift, and go to state 97
    LTE 	shift, and go to state 98
    GTE 	shift, and go to state 99

    comp	go to state 100
    equal_to	go to state 101
    not_equal_to	go to state 102
    less_than	go to state 103
    greater_than	go to state 104
    less_than_or_equal_to	go to state 105
    greater_than_or_equal_to	go to state 106



state 64

    expression  ->  multiplicative_exp . multiplicative_exp_list   (rule 51)

    SUB 	shift, and go to state 57
    ADD 	shift, and go to state 107

    SUB 	[reduce using rule 56 (multiplicative_exp_list)]
    ADD 	[reduce using rule 56 (multiplicative_exp_list)]
    $default	reduce using rule 56 (multiplicative_exp_list)

    multiplicative_exp_list	go to state 108
    add 	go to state 109
    sub 	go to state 110



state 65

    multiplicative_exp  ->  term . term_list   (rule 57)

    MULT	shift, and go to state 111
    DIV 	shift, and go to state 112
    MOD 	shift, and go to state 113

    MULT	[reduce using rule 64 (term_list)]
    DIV 	[reduce using rule 64 (term_list)]
    MOD 	[reduce using rule 64 (term_list)]
    $default	reduce using rule 64 (term_list)

    term_list	go to state 114
    multiply	go to state 115
    divide	go to state 116
    mod 	go to state 117



state 66

    term  ->  var .   (rule 68)

    $default	reduce using rule 68 (term)



state 67

    term  ->  number .   (rule 69)

    $default	reduce using rule 69 (term)



state 68

    relation_exp  ->  l_paren . bool_exp r_paren   (rule 44)
    term  ->  l_paren . expression r_paren   (rule 70)

    NOT 	shift, and go to state 54
    TRUE	shift, and go to state 55
    FALSE	shift, and go to state 56
    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    bool_exp	go to state 118
    relation_and_exp	go to state 61
    relation_exp	go to state 62
    expression	go to state 119
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 68
    not 	go to state 69
    true	go to state 70
    false	go to state 71
    sub 	go to state 72



state 69

    relation_exp  ->  not . expression comp expression   (rule 37)
    relation_exp  ->  not . true   (rule 38)
    relation_exp  ->  not . false   (rule 39)
    relation_exp  ->  not . l_paren bool_exp r_paren   (rule 40)

    TRUE	shift, and go to state 55
    FALSE	shift, and go to state 56
    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    expression	go to state 120
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 121
    true	go to state 122
    false	go to state 123
    sub 	go to state 72



state 70

    relation_exp  ->  true .   (rule 42)

    $default	reduce using rule 42 (relation_exp)



state 71

    relation_exp  ->  false .   (rule 43)

    $default	reduce using rule 43 (relation_exp)



state 72

    term  ->  sub . var   (rule 65)
    term  ->  sub . number var   (rule 66)
    term  ->  sub . l_paren expression r_paren   (rule 67)

    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    var 	go to state 124
    identifier	go to state 35
    number	go to state 125
    l_paren	go to state 126



state 73

    statement  ->  while bool_exp . begin_loop statement_list end_loop   (rule 13)

    BEGINLOOP	shift, and go to state 74

    begin_loop	go to state 127



state 74

    begin_loop  ->  BEGINLOOP .   (rule 96)

    $default	reduce using rule 96 (begin_loop)



state 75

    statement  ->  do begin_loop . statement_list dend_loop while bool_exp   (rule 14)

    IF  	shift, and go to state 24
    WHILE	shift, and go to state 25
    DO  	shift, and go to state 26
    BREAK	shift, and go to state 27
    CONTINUE	shift, and go to state 28
    EXIT	shift, and go to state 29
    READ	shift, and go to state 30
    WRITE	shift, and go to state 31
    IDENT	shift, and go to state 4

    statement	go to state 32
    statement_list	go to state 128
    var 	go to state 34
    identifier	go to state 35
    if  	go to state 36
    while	go to state 37
    do  	go to state 38
    read	go to state 39
    write	go to state 40
    break	go to state 41
    continue	go to state 42
    exit	go to state 43



state 76

    statement  ->  read var_list .   (rule 15)
    var_list  ->  var_list . comma var   (rule 25)

    COMMA	shift, and go to state 20

    $default	reduce using rule 15 (statement)

    comma	go to state 129



state 77

    var_list  ->  var .   (rule 26)

    $default	reduce using rule 26 (var_list)



state 78

    statement  ->  write var_list .   (rule 16)
    var_list  ->  var_list . comma var   (rule 25)

    COMMA	shift, and go to state 20

    $default	reduce using rule 16 (statement)

    comma	go to state 129



state 79

    integer  ->  INTEGER .   (rule 87)

    $default	reduce using rule 87 (integer)



state 80

    declaration  ->  identifier_list colon optional_array integer .   (rule 6)

    $default	reduce using rule 6 (declaration)



state 81

    optional_array  ->  array l_bracket . number r_bracket of   (rule 9)

    NUMBER	shift, and go to state 59

    number	go to state 130



state 82

    statement_list  ->  statement_list statement semicolon .   (rule 27)

    $default	reduce using rule 27 (statement_list)



state 83

    statement  ->  var assign expression .   (rule 11)

    $default	reduce using rule 11 (statement)



state 84

    term  ->  l_paren . expression r_paren   (rule 70)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    expression	go to state 131
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 85

    var  ->  identifier l_bracket expression . r_bracket   (rule 72)

    R_BRACKET	shift, and go to state 132

    r_bracket	go to state 133



state 86

    then  ->  THEN .   (rule 91)

    $default	reduce using rule 91 (then)



state 87

    statement  ->  if bool_exp then . statement_list optional_elseif optional_else end_if   (rule 12)

    IF  	shift, and go to state 24
    WHILE	shift, and go to state 25
    DO  	shift, and go to state 26
    BREAK	shift, and go to state 27
    CONTINUE	shift, and go to state 28
    EXIT	shift, and go to state 29
    READ	shift, and go to state 30
    WRITE	shift, and go to state 31
    IDENT	shift, and go to state 4

    statement	go to state 32
    statement_list	go to state 134
    var 	go to state 34
    identifier	go to state 35
    if  	go to state 36
    while	go to state 37
    do  	go to state 38
    read	go to state 39
    write	go to state 40
    break	go to state 41
    continue	go to state 42
    exit	go to state 43



state 88

    or  ->  OR .   (rule 105)

    $default	reduce using rule 105 (or)



state 89

    bool_exp  ->  relation_and_exp relation_and_exp_list .   (rule 29)
    relation_and_exp_list  ->  relation_and_exp_list . or relation_and_exp   (rule 30)

    OR  	shift, and go to state 88

    $default	reduce using rule 29 (bool_exp)

    or  	go to state 135



state 90

    relation_and_exp_list  ->  or . relation_and_exp   (rule 31)

    NOT 	shift, and go to state 54
    TRUE	shift, and go to state 55
    FALSE	shift, and go to state 56
    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    relation_and_exp	go to state 136
    relation_exp	go to state 62
    expression	go to state 63
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 68
    not 	go to state 69
    true	go to state 70
    false	go to state 71
    sub 	go to state 72



state 91

    and  ->  AND .   (rule 106)

    $default	reduce using rule 106 (and)



state 92

    relation_and_exp  ->  relation_exp relation_exp_list .   (rule 33)
    relation_exp_list  ->  relation_exp_list . and relation_exp   (rule 34)

    AND 	shift, and go to state 91

    $default	reduce using rule 33 (relation_and_exp)

    and 	go to state 137



state 93

    relation_exp_list  ->  and . relation_exp   (rule 35)

    NOT 	shift, and go to state 54
    TRUE	shift, and go to state 55
    FALSE	shift, and go to state 56
    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    relation_exp	go to state 138
    expression	go to state 63
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 68
    not 	go to state 69
    true	go to state 70
    false	go to state 71
    sub 	go to state 72



state 94

    equal_to  ->  EQ .   (rule 110)

    $default	reduce using rule 110 (equal_to)



state 95

    not_equal_to  ->  NEQ .   (rule 111)

    $default	reduce using rule 111 (not_equal_to)



state 96

    less_than  ->  LT .   (rule 112)

    $default	reduce using rule 112 (less_than)



state 97

    greater_than  ->  GT .   (rule 113)

    $default	reduce using rule 113 (greater_than)



state 98

    less_than_or_equal_to  ->  LTE .   (rule 114)

    $default	reduce using rule 114 (less_than_or_equal_to)



state 99

    greater_than_or_equal_to  ->  GTE .   (rule 115)

    $default	reduce using rule 115 (greater_than_or_equal_to)



state 100

    relation_exp  ->  expression comp . expression   (rule 41)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    expression	go to state 139
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 101

    comp  ->  equal_to .   (rule 45)

    $default	reduce using rule 45 (comp)



state 102

    comp  ->  not_equal_to .   (rule 46)

    $default	reduce using rule 46 (comp)



state 103

    comp  ->  less_than .   (rule 47)

    $default	reduce using rule 47 (comp)



state 104

    comp  ->  greater_than .   (rule 48)

    $default	reduce using rule 48 (comp)



state 105

    comp  ->  less_than_or_equal_to .   (rule 49)

    $default	reduce using rule 49 (comp)



state 106

    comp  ->  greater_than_or_equal_to .   (rule 50)

    $default	reduce using rule 50 (comp)



state 107

    add  ->  ADD .   (rule 116)

    $default	reduce using rule 116 (add)



state 108

    expression  ->  multiplicative_exp multiplicative_exp_list .   (rule 51)
    multiplicative_exp_list  ->  multiplicative_exp_list . add multiplicative_exp   (rule 52)
    multiplicative_exp_list  ->  multiplicative_exp_list . sub multiplicative_exp   (rule 53)

    SUB 	shift, and go to state 57
    ADD 	shift, and go to state 107

    $default	reduce using rule 51 (expression)

    add 	go to state 140
    sub 	go to state 141



state 109

    multiplicative_exp_list  ->  add . multiplicative_exp   (rule 54)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    multiplicative_exp	go to state 142
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 110

    multiplicative_exp_list  ->  sub . multiplicative_exp   (rule 55)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    multiplicative_exp	go to state 143
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 111

    multiply  ->  MULT .   (rule 118)

    $default	reduce using rule 118 (multiply)



state 112

    divide  ->  DIV .   (rule 119)

    $default	reduce using rule 119 (divide)



state 113

    mod  ->  MOD .   (rule 120)

    $default	reduce using rule 120 (mod)



state 114

    multiplicative_exp  ->  term term_list .   (rule 57)
    term_list  ->  term_list . multiply term   (rule 58)
    term_list  ->  term_list . divide term   (rule 59)
    term_list  ->  term_list . mod term   (rule 60)

    MULT	shift, and go to state 111
    DIV 	shift, and go to state 112
    MOD 	shift, and go to state 113

    $default	reduce using rule 57 (multiplicative_exp)

    multiply	go to state 144
    divide	go to state 145
    mod 	go to state 146



state 115

    term_list  ->  multiply . term   (rule 61)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    term	go to state 147
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 116

    term_list  ->  divide . term   (rule 62)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    term	go to state 148
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 117

    term_list  ->  mod . term   (rule 63)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    term	go to state 149
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 118

    relation_exp  ->  l_paren bool_exp . r_paren   (rule 44)

    R_PAREN	shift, and go to state 150

    r_paren	go to state 151



state 119

    relation_exp  ->  expression . comp expression   (rule 41)
    term  ->  l_paren expression . r_paren   (rule 70)

    EQ  	shift, and go to state 94
    NEQ 	shift, and go to state 95
    LT  	shift, and go to state 96
    GT  	shift, and go to state 97
    LTE 	shift, and go to state 98
    GTE 	shift, and go to state 99
    R_PAREN	shift, and go to state 150

    comp	go to state 100
    r_paren	go to state 152
    equal_to	go to state 101
    not_equal_to	go to state 102
    less_than	go to state 103
    greater_than	go to state 104
    less_than_or_equal_to	go to state 105
    greater_than_or_equal_to	go to state 106



state 120

    relation_exp  ->  not expression . comp expression   (rule 37)

    EQ  	shift, and go to state 94
    NEQ 	shift, and go to state 95
    LT  	shift, and go to state 96
    GT  	shift, and go to state 97
    LTE 	shift, and go to state 98
    GTE 	shift, and go to state 99

    comp	go to state 153
    equal_to	go to state 101
    not_equal_to	go to state 102
    less_than	go to state 103
    greater_than	go to state 104
    less_than_or_equal_to	go to state 105
    greater_than_or_equal_to	go to state 106



state 121

    relation_exp  ->  not l_paren . bool_exp r_paren   (rule 40)
    term  ->  l_paren . expression r_paren   (rule 70)

    NOT 	shift, and go to state 54
    TRUE	shift, and go to state 55
    FALSE	shift, and go to state 56
    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    bool_exp	go to state 154
    relation_and_exp	go to state 61
    relation_exp	go to state 62
    expression	go to state 119
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 68
    not 	go to state 69
    true	go to state 70
    false	go to state 71
    sub 	go to state 72



state 122

    relation_exp  ->  not true .   (rule 38)

    $default	reduce using rule 38 (relation_exp)



state 123

    relation_exp  ->  not false .   (rule 39)

    $default	reduce using rule 39 (relation_exp)



state 124

    term  ->  sub var .   (rule 65)

    $default	reduce using rule 65 (term)



state 125

    term  ->  sub number . var   (rule 66)

    IDENT	shift, and go to state 4

    var 	go to state 155
    identifier	go to state 35



state 126

    term  ->  sub l_paren . expression r_paren   (rule 67)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    expression	go to state 156
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 127

    statement  ->  while bool_exp begin_loop . statement_list end_loop   (rule 13)

    IF  	shift, and go to state 24
    WHILE	shift, and go to state 25
    DO  	shift, and go to state 26
    BREAK	shift, and go to state 27
    CONTINUE	shift, and go to state 28
    EXIT	shift, and go to state 29
    READ	shift, and go to state 30
    WRITE	shift, and go to state 31
    IDENT	shift, and go to state 4

    statement	go to state 32
    statement_list	go to state 157
    var 	go to state 34
    identifier	go to state 35
    if  	go to state 36
    while	go to state 37
    do  	go to state 38
    read	go to state 39
    write	go to state 40
    break	go to state 41
    continue	go to state 42
    exit	go to state 43



state 128

    statement  ->  do begin_loop statement_list . dend_loop while bool_exp   (rule 14)
    statement_list  ->  statement_list . statement semicolon   (rule 27)

    IF  	shift, and go to state 24
    WHILE	shift, and go to state 25
    DO  	shift, and go to state 26
    ENDLOOP	shift, and go to state 158
    BREAK	shift, and go to state 27
    CONTINUE	shift, and go to state 28
    EXIT	shift, and go to state 29
    READ	shift, and go to state 30
    WRITE	shift, and go to state 31
    IDENT	shift, and go to state 4

    statement	go to state 49
    var 	go to state 34
    identifier	go to state 35
    if  	go to state 36
    while	go to state 37
    dend_loop	go to state 159
    do  	go to state 38
    read	go to state 39
    write	go to state 40
    break	go to state 41
    continue	go to state 42
    exit	go to state 43



state 129

    var_list  ->  var_list comma . var   (rule 25)

    IDENT	shift, and go to state 4

    var 	go to state 160
    identifier	go to state 35



state 130

    optional_array  ->  array l_bracket number . r_bracket of   (rule 9)

    R_BRACKET	shift, and go to state 132

    r_bracket	go to state 161



state 131

    term  ->  l_paren expression . r_paren   (rule 70)

    R_PAREN	shift, and go to state 150

    r_paren	go to state 152



state 132

    r_bracket  ->  R_BRACKET .   (rule 83)

    $default	reduce using rule 83 (r_bracket)



state 133

    var  ->  identifier l_bracket expression r_bracket .   (rule 72)

    $default	reduce using rule 72 (var)



state 134

    statement  ->  if bool_exp then statement_list . optional_elseif optional_else end_if   (rule 12)
    statement_list  ->  statement_list . statement semicolon   (rule 27)

    IF  	shift, and go to state 24
    ELSEIF	shift, and go to state 162
    WHILE	shift, and go to state 25
    DO  	shift, and go to state 26
    BREAK	shift, and go to state 27
    CONTINUE	shift, and go to state 28
    EXIT	shift, and go to state 29
    READ	shift, and go to state 30
    WRITE	shift, and go to state 31
    IDENT	shift, and go to state 4

    ELSEIF	[reduce using rule 22 (optional_elseif)]
    $default	reduce using rule 22 (optional_elseif)

    statement	go to state 49
    optional_elseif	go to state 163
    var 	go to state 34
    identifier	go to state 35
    if  	go to state 36
    elseif	go to state 164
    while	go to state 37
    do  	go to state 38
    read	go to state 39
    write	go to state 40
    break	go to state 41
    continue	go to state 42
    exit	go to state 43



state 135

    relation_and_exp_list  ->  relation_and_exp_list or . relation_and_exp   (rule 30)

    NOT 	shift, and go to state 54
    TRUE	shift, and go to state 55
    FALSE	shift, and go to state 56
    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    relation_and_exp	go to state 165
    relation_exp	go to state 62
    expression	go to state 63
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 68
    not 	go to state 69
    true	go to state 70
    false	go to state 71
    sub 	go to state 72



state 136

    relation_and_exp_list  ->  or relation_and_exp .   (rule 31)

    $default	reduce using rule 31 (relation_and_exp_list)



state 137

    relation_exp_list  ->  relation_exp_list and . relation_exp   (rule 34)

    NOT 	shift, and go to state 54
    TRUE	shift, and go to state 55
    FALSE	shift, and go to state 56
    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    relation_exp	go to state 166
    expression	go to state 63
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 68
    not 	go to state 69
    true	go to state 70
    false	go to state 71
    sub 	go to state 72



state 138

    relation_exp_list  ->  and relation_exp .   (rule 35)

    $default	reduce using rule 35 (relation_exp_list)



state 139

    relation_exp  ->  expression comp expression .   (rule 41)

    $default	reduce using rule 41 (relation_exp)



state 140

    multiplicative_exp_list  ->  multiplicative_exp_list add . multiplicative_exp   (rule 52)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    multiplicative_exp	go to state 167
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 141

    multiplicative_exp_list  ->  multiplicative_exp_list sub . multiplicative_exp   (rule 53)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    multiplicative_exp	go to state 168
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 142

    multiplicative_exp_list  ->  add multiplicative_exp .   (rule 54)

    $default	reduce using rule 54 (multiplicative_exp_list)



state 143

    multiplicative_exp_list  ->  sub multiplicative_exp .   (rule 55)

    $default	reduce using rule 55 (multiplicative_exp_list)



state 144

    term_list  ->  term_list multiply . term   (rule 58)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    term	go to state 169
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 145

    term_list  ->  term_list divide . term   (rule 59)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    term	go to state 170
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 146

    term_list  ->  term_list mod . term   (rule 60)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    term	go to state 171
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 147

    term_list  ->  multiply term .   (rule 61)

    $default	reduce using rule 61 (term_list)



state 148

    term_list  ->  divide term .   (rule 62)

    $default	reduce using rule 62 (term_list)



state 149

    term_list  ->  mod term .   (rule 63)

    $default	reduce using rule 63 (term_list)



state 150

    r_paren  ->  R_PAREN .   (rule 85)

    $default	reduce using rule 85 (r_paren)



state 151

    relation_exp  ->  l_paren bool_exp r_paren .   (rule 44)

    $default	reduce using rule 44 (relation_exp)



state 152

    term  ->  l_paren expression r_paren .   (rule 70)

    $default	reduce using rule 70 (term)



state 153

    relation_exp  ->  not expression comp . expression   (rule 37)

    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    expression	go to state 172
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 84
    sub 	go to state 72



state 154

    relation_exp  ->  not l_paren bool_exp . r_paren   (rule 40)

    R_PAREN	shift, and go to state 150

    r_paren	go to state 173



state 155

    term  ->  sub number var .   (rule 66)

    $default	reduce using rule 66 (term)



state 156

    term  ->  sub l_paren expression . r_paren   (rule 67)

    R_PAREN	shift, and go to state 150

    r_paren	go to state 174



state 157

    statement  ->  while bool_exp begin_loop statement_list . end_loop   (rule 13)
    statement_list  ->  statement_list . statement semicolon   (rule 27)

    IF  	shift, and go to state 24
    WHILE	shift, and go to state 25
    DO  	shift, and go to state 26
    ENDLOOP	shift, and go to state 175
    BREAK	shift, and go to state 27
    CONTINUE	shift, and go to state 28
    EXIT	shift, and go to state 29
    READ	shift, and go to state 30
    WRITE	shift, and go to state 31
    IDENT	shift, and go to state 4

    statement	go to state 49
    var 	go to state 34
    identifier	go to state 35
    if  	go to state 36
    while	go to state 37
    end_loop	go to state 176
    do  	go to state 38
    read	go to state 39
    write	go to state 40
    break	go to state 41
    continue	go to state 42
    exit	go to state 43



state 158

    dend_loop  ->  ENDLOOP .   (rule 97)

    $default	reduce using rule 97 (dend_loop)



state 159

    statement  ->  do begin_loop statement_list dend_loop . while bool_exp   (rule 14)

    WHILE	shift, and go to state 25

    while	go to state 177



state 160

    var_list  ->  var_list comma var .   (rule 25)

    $default	reduce using rule 25 (var_list)



state 161

    optional_array  ->  array l_bracket number r_bracket . of   (rule 9)

    OF  	shift, and go to state 178

    of  	go to state 179



state 162

    elseif  ->  ELSEIF .   (rule 93)

    $default	reduce using rule 93 (elseif)



state 163

    statement  ->  if bool_exp then statement_list optional_elseif . optional_else end_if   (rule 12)
    optional_elseif  ->  optional_elseif . elseif bool_exp statement_list   (rule 20)

    ELSE	shift, and go to state 180
    ELSEIF	shift, and go to state 162

    $default	reduce using rule 24 (optional_else)

    optional_else	go to state 181
    elseif	go to state 182
    else	go to state 183



state 164

    optional_elseif  ->  elseif . bool_exp statement_list   (rule 21)

    NOT 	shift, and go to state 54
    TRUE	shift, and go to state 55
    FALSE	shift, and go to state 56
    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    bool_exp	go to state 184
    relation_and_exp	go to state 61
    relation_exp	go to state 62
    expression	go to state 63
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 68
    not 	go to state 69
    true	go to state 70
    false	go to state 71
    sub 	go to state 72



state 165

    relation_and_exp_list  ->  relation_and_exp_list or relation_and_exp .   (rule 30)

    $default	reduce using rule 30 (relation_and_exp_list)



state 166

    relation_exp_list  ->  relation_exp_list and relation_exp .   (rule 34)

    $default	reduce using rule 34 (relation_exp_list)



state 167

    multiplicative_exp_list  ->  multiplicative_exp_list add multiplicative_exp .   (rule 52)

    $default	reduce using rule 52 (multiplicative_exp_list)



state 168

    multiplicative_exp_list  ->  multiplicative_exp_list sub multiplicative_exp .   (rule 53)

    $default	reduce using rule 53 (multiplicative_exp_list)



state 169

    term_list  ->  term_list multiply term .   (rule 58)

    $default	reduce using rule 58 (term_list)



state 170

    term_list  ->  term_list divide term .   (rule 59)

    $default	reduce using rule 59 (term_list)



state 171

    term_list  ->  term_list mod term .   (rule 60)

    $default	reduce using rule 60 (term_list)



state 172

    relation_exp  ->  not expression comp expression .   (rule 37)

    $default	reduce using rule 37 (relation_exp)



state 173

    relation_exp  ->  not l_paren bool_exp r_paren .   (rule 40)

    $default	reduce using rule 40 (relation_exp)



state 174

    term  ->  sub l_paren expression r_paren .   (rule 67)

    $default	reduce using rule 67 (term)



state 175

    end_loop  ->  ENDLOOP .   (rule 98)

    $default	reduce using rule 98 (end_loop)



state 176

    statement  ->  while bool_exp begin_loop statement_list end_loop .   (rule 13)

    $default	reduce using rule 13 (statement)



state 177

    statement  ->  do begin_loop statement_list dend_loop while . bool_exp   (rule 14)

    NOT 	shift, and go to state 54
    TRUE	shift, and go to state 55
    FALSE	shift, and go to state 56
    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    bool_exp	go to state 185
    relation_and_exp	go to state 61
    relation_exp	go to state 62
    expression	go to state 63
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 68
    not 	go to state 69
    true	go to state 70
    false	go to state 71
    sub 	go to state 72



state 178

    of  ->  OF .   (rule 86)

    $default	reduce using rule 86 (of)



state 179

    optional_array  ->  array l_bracket number r_bracket of .   (rule 9)

    $default	reduce using rule 9 (optional_array)



state 180

    else  ->  ELSE .   (rule 94)

    $default	reduce using rule 94 (else)



state 181

    statement  ->  if bool_exp then statement_list optional_elseif optional_else . end_if   (rule 12)

    ENDIF	shift, and go to state 186

    end_if	go to state 187



state 182

    optional_elseif  ->  optional_elseif elseif . bool_exp statement_list   (rule 20)

    NOT 	shift, and go to state 54
    TRUE	shift, and go to state 55
    FALSE	shift, and go to state 56
    SUB 	shift, and go to state 57
    L_PAREN	shift, and go to state 58
    NUMBER	shift, and go to state 59
    IDENT	shift, and go to state 4

    bool_exp	go to state 188
    relation_and_exp	go to state 61
    relation_exp	go to state 62
    expression	go to state 63
    multiplicative_exp	go to state 64
    term	go to state 65
    var 	go to state 66
    identifier	go to state 35
    number	go to state 67
    l_paren	go to state 68
    not 	go to state 69
    true	go to state 70
    false	go to state 71
    sub 	go to state 72



state 183

    optional_else  ->  else . statement_list   (rule 23)

    IF  	shift, and go to state 24
    WHILE	shift, and go to state 25
    DO  	shift, and go to state 26
    BREAK	shift, and go to state 27
    CONTINUE	shift, and go to state 28
    EXIT	shift, and go to state 29
    READ	shift, and go to state 30
    WRITE	shift, and go to state 31
    IDENT	shift, and go to state 4

    statement	go to state 32
    statement_list	go to state 189
    var 	go to state 34
    identifier	go to state 35
    if  	go to state 36
    while	go to state 37
    do  	go to state 38
    read	go to state 39
    write	go to state 40
    break	go to state 41
    continue	go to state 42
    exit	go to state 43



state 184

    optional_elseif  ->  elseif bool_exp . statement_list   (rule 21)

    IF  	shift, and go to state 24
    WHILE	shift, and go to state 25
    DO  	shift, and go to state 26
    BREAK	shift, and go to state 27
    CONTINUE	shift, and go to state 28
    EXIT	shift, and go to state 29
    READ	shift, and go to state 30
    WRITE	shift, and go to state 31
    IDENT	shift, and go to state 4

    statement	go to state 32
    statement_list	go to state 190
    var 	go to state 34
    identifier	go to state 35
    if  	go to state 36
    while	go to state 37
    do  	go to state 38
    read	go to state 39
    write	go to state 40
    break	go to state 41
    continue	go to state 42
    exit	go to state 43



state 185

    statement  ->  do begin_loop statement_list dend_loop while bool_exp .   (rule 14)

    $default	reduce using rule 14 (statement)



state 186

    end_if  ->  ENDIF .   (rule 92)

    $default	reduce using rule 92 (end_if)



state 187

    statement  ->  if bool_exp then statement_list optional_elseif optional_else end_if .   (rule 12)

    $default	reduce using rule 12 (statement)



state 188

    optional_elseif  ->  optional_elseif elseif bool_exp . statement_list   (rule 20)

    IF  	shift, and go to state 24
    WHILE	shift, and go to state 25
    DO  	shift, and go to state 26
    BREAK	shift, and go to state 27
    CONTINUE	shift, and go to state 28
    EXIT	shift, and go to state 29
    READ	shift, and go to state 30
    WRITE	shift, and go to state 31
    IDENT	shift, and go to state 4

    statement	go to state 32
    statement_list	go to state 191
    var 	go to state 34
    identifier	go to state 35
    if  	go to state 36
    while	go to state 37
    do  	go to state 38
    read	go to state 39
    write	go to state 40
    break	go to state 41
    continue	go to state 42
    exit	go to state 43



state 189

    optional_else  ->  else statement_list .   (rule 23)
    statement_list  ->  statement_list . statement semicolon   (rule 27)

    IF  	shift, and go to state 24
    WHILE	shift, and go to state 25
    DO  	shift, and go to state 26
    BREAK	shift, and go to state 27
    CONTINUE	shift, and go to state 28
    EXIT	shift, and go to state 29
    READ	shift, and go to state 30
    WRITE	shift, and go to state 31
    IDENT	shift, and go to state 4

    $default	reduce using rule 23 (optional_else)

    statement	go to state 49
    var 	go to state 34
    identifier	go to state 35
    if  	go to state 36
    while	go to state 37
    do  	go to state 38
    read	go to state 39
    write	go to state 40
    break	go to state 41
    continue	go to state 42
    exit	go to state 43



state 190

    optional_elseif  ->  elseif bool_exp statement_list .   (rule 21)
    statement_list  ->  statement_list . statement semicolon   (rule 27)

    IF  	shift, and go to state 24
    WHILE	shift, and go to state 25
    DO  	shift, and go to state 26
    BREAK	shift, and go to state 27
    CONTINUE	shift, and go to state 28
    EXIT	shift, and go to state 29
    READ	shift, and go to state 30
    WRITE	shift, and go to state 31
    IDENT	shift, and go to state 4

    $default	reduce using rule 21 (optional_elseif)

    statement	go to state 49
    var 	go to state 34
    identifier	go to state 35
    if  	go to state 36
    while	go to state 37
    do  	go to state 38
    read	go to state 39
    write	go to state 40
    break	go to state 41
    continue	go to state 42
    exit	go to state 43



state 191

    optional_elseif  ->  optional_elseif elseif bool_exp statement_list .   (rule 20)
    statement_list  ->  statement_list . statement semicolon   (rule 27)

    IF  	shift, and go to state 24
    WHILE	shift, and go to state 25
    DO  	shift, and go to state 26
    BREAK	shift, and go to state 27
    CONTINUE	shift, and go to state 28
    EXIT	shift, and go to state 29
    READ	shift, and go to state 30
    WRITE	shift, and go to state 31
    IDENT	shift, and go to state 4

    $default	reduce using rule 20 (optional_elseif)

    statement	go to state 49
    var 	go to state 34
    identifier	go to state 35
    if  	go to state 36
    while	go to state 37
    do  	go to state 38
    read	go to state 39
    write	go to state 40
    break	go to state 41
    continue	go to state 42
    exit	go to state 43



state 192

    $   	go to state 193



state 193

    $   	go to state 194



state 194

    $default	accept
