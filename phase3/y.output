State 69 conflicts: 1 shift/reduce
State 70 conflicts: 1 shift/reduce
State 72 conflicts: 2 shift/reduce
State 73 conflicts: 3 shift/reduce
State 145 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program_start

    2 program_start: program identifier semicolon block end_program
    3              | error program identifier semicolon block end_program

    4 block: declaration_list begin_program statement_list

    5 declaration_list: declaration_list declaration semicolon
    6                 | declaration semicolon

    7 declaration: identifier_list colon optional_array integer

    8 identifier_list: identifier_list comma identifier
    9                | identifier

   10 optional_array: array l_bracket number r_bracket of
   11               | /* empty */

   12 statement: var assign expression
   13          | var assign bool_exp question expression colon expression
   14          | if bool_exp then statement_list optional_elseif optional_else end_if
   15          | while bool_exp begin_loop statement_list end_loop
   16          | do begin_loop statement_list end_loop while bool_exp
   17          | read var_list
   18          | write var_list
   19          | break
   20          | continue
   21          | exit

   22 optional_elseif: optional_elseif elseif bool_exp statement_list
   23                | elseif bool_exp statement_list
   24                | /* empty */

   25 optional_else: else statement_list
   26              | /* empty */

   27 var_list: var_list comma var
   28         | var

   29 statement_list: statement_list statement semicolon
   30               | statement semicolon

   31 bool_exp: relation_and_exp relation_and_exp_list

   32 relation_and_exp_list: relation_and_exp_list or relation_and_exp
   33                      | or relation_and_exp
   34                      | /* empty */

   35 relation_and_exp: relation_exp relation_exp_list

   36 relation_exp_list: relation_exp_list and relation_exp
   37                  | and relation_exp
   38                  | /* empty */

   39 relation_exp: not expression comp expression
   40             | not true
   41             | not false
   42             | not l_paren bool_exp r_paren
   43             | expression comp expression
   44             | true
   45             | false
   46             | l_paren bool_exp r_paren

   47 comp: equal_to
   48     | not_equal_to
   49     | less_than
   50     | greater_than
   51     | less_than_or_equal_to
   52     | greater_than_or_equal_to

   53 expression: multiplicative_exp multiplicative_exp_list

   54 multiplicative_exp_list: multiplicative_exp_list add multiplicative_exp
   55                        | multiplicative_exp_list sub multiplicative_exp
   56                        | add multiplicative_exp
   57                        | sub multiplicative_exp
   58                        | /* empty */

   59 multiplicative_exp: term term_list

   60 term_list: term_list multiply term
   61          | term_list divide term
   62          | term_list mod term
   63          | multiply term
   64          | divide term
   65          | mod term
   66          | /* empty */

   67 term: sub var
   68     | sub number var
   69     | sub l_paren expression r_paren
   70     | var
   71     | number
   72     | l_paren expression r_paren

   73 var: identifier
   74    | identifier l_bracket expression r_bracket

   75 program: PROGRAM

   76 identifier: IDENT

   77 semicolon: SEMICOLON

   78 end_program: END_PROGRAM

   79 begin_program: BEGIN_PROGRAM

   80 comma: COMMA

   81 colon: COLON

   82 array: ARRAY

   83 l_bracket: L_BRACKET

   84 number: NUMBER

   85 r_bracket: R_BRACKET

   86 l_paren: L_PAREN

   87 r_paren: R_PAREN

   88 of: OF

   89 integer: INTEGER

   90 assign: ASSIGN

   91 question: QUESTION

   92 if: IF

   93 then: THEN

   94 end_if: ENDIF

   95 elseif: ELSEIF

   96 else: ELSE

   97 while: WHILE

   98 begin_loop: BEGINLOOP

   99 end_loop: ENDLOOP

  100 do: DO

  101 read: READ

  102 write: WRITE

  103 break: BREAK

  104 continue: CONTINUE

  105 exit: EXIT

  106 or: OR

  107 and: AND

  108 not: NOT

  109 true: TRUE

  110 false: FALSE

  111 equal_to: EQ

  112 not_equal_to: NEQ

  113 less_than: LT

  114 greater_than: GT

  115 less_than_or_equal_to: LTE

  116 greater_than_or_equal_to: GTE

  117 add: ADD

  118 sub: SUB

  119 multiply: MULT

  120 divide: DIV

  121 mod: MOD


Terminals, with rules where they appear

$end (0) 0
error (256) 3
PROGRAM (258) 75
BEGIN_PROGRAM (259) 79
END_PROGRAM (260) 78
INTEGER (261) 89
ARRAY (262) 82
OF (263) 88
IF (264) 92
THEN (265) 93
ENDIF (266) 94
ELSE (267) 96
ELSEIF (268) 95
WHILE (269) 97
DO (270) 100
BEGINLOOP (271) 98
ENDLOOP (272) 99
BREAK (273) 103
CONTINUE (274) 104
EXIT (275) 105
READ (276) 101
WRITE (277) 102
AND (278) 107
OR (279) 106
NOT (280) 108
TRUE (281) 109
FALSE (282) 110
SUB (283) 118
ADD (284) 117
MULT (285) 119
DIV (286) 120
MOD (287) 121
EQ (288) 111
NEQ (289) 112
LT (290) 113
GT (291) 114
LTE (292) 115
GTE (293) 116
SEMICOLON (294) 77
COLON (295) 81
COMMA (296) 80
QUESTION (297) 91
L_BRACKET (298) 83
R_BRACKET (299) 85
L_PAREN (300) 86
R_PAREN (301) 87
ASSIGN (302) 90
NUMBER (303) 84
IDENT (304) 76
NEG (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
start (52)
    on left: 1, on right: 0
program_start (53)
    on left: 2 3, on right: 1
block (54)
    on left: 4, on right: 2 3
declaration_list (55)
    on left: 5 6, on right: 4 5
declaration (56)
    on left: 7, on right: 5 6
identifier_list (57)
    on left: 8 9, on right: 7 8
optional_array (58)
    on left: 10 11, on right: 7
statement (59)
    on left: 12 13 14 15 16 17 18 19 20 21, on right: 29 30
optional_elseif (60)
    on left: 22 23 24, on right: 14 22
optional_else (61)
    on left: 25 26, on right: 14
var_list (62)
    on left: 27 28, on right: 17 18 27
statement_list (63)
    on left: 29 30, on right: 4 14 15 16 22 23 25 29
bool_exp (64)
    on left: 31, on right: 13 14 15 16 22 23 42 46
relation_and_exp_list (65)
    on left: 32 33 34, on right: 31 32
relation_and_exp (66)
    on left: 35, on right: 31 32 33
relation_exp_list (67)
    on left: 36 37 38, on right: 35 36
relation_exp (68)
    on left: 39 40 41 42 43 44 45 46, on right: 35 36 37
comp (69)
    on left: 47 48 49 50 51 52, on right: 39 43
expression (70)
    on left: 53, on right: 12 13 39 43 69 72 74
multiplicative_exp_list (71)
    on left: 54 55 56 57 58, on right: 53 54 55
multiplicative_exp (72)
    on left: 59, on right: 53 54 55 56 57
term_list (73)
    on left: 60 61 62 63 64 65 66, on right: 59 60 61 62
term (74)
    on left: 67 68 69 70 71 72, on right: 59 60 61 62 63 64 65
var (75)
    on left: 73 74, on right: 12 13 27 28 67 68 70
program (76)
    on left: 75, on right: 2 3
identifier (77)
    on left: 76, on right: 2 3 8 9 73 74
semicolon (78)
    on left: 77, on right: 2 3 5 6 29 30
end_program (79)
    on left: 78, on right: 2 3
begin_program (80)
    on left: 79, on right: 4
comma (81)
    on left: 80, on right: 8 27
colon (82)
    on left: 81, on right: 7 13
array (83)
    on left: 82, on right: 10
l_bracket (84)
    on left: 83, on right: 10 74
number (85)
    on left: 84, on right: 10 68 71
r_bracket (86)
    on left: 85, on right: 10 74
l_paren (87)
    on left: 86, on right: 42 46 69 72
r_paren (88)
    on left: 87, on right: 42 46 69 72
of (89)
    on left: 88, on right: 10
integer (90)
    on left: 89, on right: 7
assign (91)
    on left: 90, on right: 12 13
question (92)
    on left: 91, on right: 13
if (93)
    on left: 92, on right: 14
then (94)
    on left: 93, on right: 14
end_if (95)
    on left: 94, on right: 14
elseif (96)
    on left: 95, on right: 22 23
else (97)
    on left: 96, on right: 25
while (98)
    on left: 97, on right: 15 16
begin_loop (99)
    on left: 98, on right: 15 16
end_loop (100)
    on left: 99, on right: 15 16
do (101)
    on left: 100, on right: 16
read (102)
    on left: 101, on right: 17
write (103)
    on left: 102, on right: 18
break (104)
    on left: 103, on right: 19
continue (105)
    on left: 104, on right: 20
exit (106)
    on left: 105, on right: 21
or (107)
    on left: 106, on right: 32 33
and (108)
    on left: 107, on right: 36 37
not (109)
    on left: 108, on right: 39 40 41 42
true (110)
    on left: 109, on right: 40 44
false (111)
    on left: 110, on right: 41 45
equal_to (112)
    on left: 111, on right: 47
not_equal_to (113)
    on left: 112, on right: 48
less_than (114)
    on left: 113, on right: 49
greater_than (115)
    on left: 114, on right: 50
less_than_or_equal_to (116)
    on left: 115, on right: 51
greater_than_or_equal_to (117)
    on left: 116, on right: 52
add (118)
    on left: 117, on right: 54 56
sub (119)
    on left: 118, on right: 55 57 67 68 69
multiply (120)
    on left: 119, on right: 60 63
divide (121)
    on left: 120, on right: 61 64
mod (122)
    on left: 121, on right: 62 65


state 0

    0 $accept: . start $end

    error    shift, and go to state 1
    PROGRAM  shift, and go to state 2

    start          go to state 3
    program_start  go to state 4
    program        go to state 5


state 1

    3 program_start: error . program identifier semicolon block end_program

    PROGRAM  shift, and go to state 2

    program  go to state 6


state 2

   75 program: PROGRAM .

    $default  reduce using rule 75 (program)


state 3

    0 $accept: start . $end

    $end  shift, and go to state 7


state 4

    1 start: program_start .

    $default  reduce using rule 1 (start)


state 5

    2 program_start: program . identifier semicolon block end_program

    IDENT  shift, and go to state 8

    identifier  go to state 9


state 6

    3 program_start: error program . identifier semicolon block end_program

    IDENT  shift, and go to state 8

    identifier  go to state 10


state 7

    0 $accept: start $end .

    $default  accept


state 8

   76 identifier: IDENT .

    $default  reduce using rule 76 (identifier)


state 9

    2 program_start: program identifier . semicolon block end_program

    SEMICOLON  shift, and go to state 11

    semicolon  go to state 12


state 10

    3 program_start: error program identifier . semicolon block end_program

    SEMICOLON  shift, and go to state 11

    semicolon  go to state 13


state 11

   77 semicolon: SEMICOLON .

    $default  reduce using rule 77 (semicolon)


state 12

    2 program_start: program identifier semicolon . block end_program

    IDENT  shift, and go to state 8

    block             go to state 14
    declaration_list  go to state 15
    declaration       go to state 16
    identifier_list   go to state 17
    identifier        go to state 18


state 13

    3 program_start: error program identifier semicolon . block end_program

    IDENT  shift, and go to state 8

    block             go to state 19
    declaration_list  go to state 15
    declaration       go to state 16
    identifier_list   go to state 17
    identifier        go to state 18


state 14

    2 program_start: program identifier semicolon block . end_program

    END_PROGRAM  shift, and go to state 20

    end_program  go to state 21


state 15

    4 block: declaration_list . begin_program statement_list
    5 declaration_list: declaration_list . declaration semicolon

    BEGIN_PROGRAM  shift, and go to state 22
    IDENT          shift, and go to state 8

    declaration      go to state 23
    identifier_list  go to state 17
    identifier       go to state 18
    begin_program    go to state 24


state 16

    6 declaration_list: declaration . semicolon

    SEMICOLON  shift, and go to state 11

    semicolon  go to state 25


state 17

    7 declaration: identifier_list . colon optional_array integer
    8 identifier_list: identifier_list . comma identifier

    COLON  shift, and go to state 26
    COMMA  shift, and go to state 27

    comma  go to state 28
    colon  go to state 29


state 18

    9 identifier_list: identifier .

    $default  reduce using rule 9 (identifier_list)


state 19

    3 program_start: error program identifier semicolon block . end_program

    END_PROGRAM  shift, and go to state 20

    end_program  go to state 30


state 20

   78 end_program: END_PROGRAM .

    $default  reduce using rule 78 (end_program)


state 21

    2 program_start: program identifier semicolon block end_program .

    $default  reduce using rule 2 (program_start)


state 22

   79 begin_program: BEGIN_PROGRAM .

    $default  reduce using rule 79 (begin_program)


state 23

    5 declaration_list: declaration_list declaration . semicolon

    SEMICOLON  shift, and go to state 11

    semicolon  go to state 31


state 24

    4 block: declaration_list begin_program . statement_list

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    EXIT      shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    IDENT     shift, and go to state 8

    statement       go to state 40
    statement_list  go to state 41
    var             go to state 42
    identifier      go to state 43
    if              go to state 44
    while           go to state 45
    do              go to state 46
    read            go to state 47
    write           go to state 48
    break           go to state 49
    continue        go to state 50
    exit            go to state 51


state 25

    6 declaration_list: declaration semicolon .

    $default  reduce using rule 6 (declaration_list)


state 26

   81 colon: COLON .

    $default  reduce using rule 81 (colon)


state 27

   80 comma: COMMA .

    $default  reduce using rule 80 (comma)


state 28

    8 identifier_list: identifier_list comma . identifier

    IDENT  shift, and go to state 8

    identifier  go to state 52


state 29

    7 declaration: identifier_list colon . optional_array integer

    ARRAY  shift, and go to state 53

    $default  reduce using rule 11 (optional_array)

    optional_array  go to state 54
    array           go to state 55


state 30

    3 program_start: error program identifier semicolon block end_program .

    $default  reduce using rule 3 (program_start)


state 31

    5 declaration_list: declaration_list declaration semicolon .

    $default  reduce using rule 5 (declaration_list)


state 32

   92 if: IF .

    $default  reduce using rule 92 (if)


state 33

   97 while: WHILE .

    $default  reduce using rule 97 (while)


state 34

  100 do: DO .

    $default  reduce using rule 100 (do)


state 35

  103 break: BREAK .

    $default  reduce using rule 103 (break)


state 36

  104 continue: CONTINUE .

    $default  reduce using rule 104 (continue)


state 37

  105 exit: EXIT .

    $default  reduce using rule 105 (exit)


state 38

  101 read: READ .

    $default  reduce using rule 101 (read)


state 39

  102 write: WRITE .

    $default  reduce using rule 102 (write)


state 40

   30 statement_list: statement . semicolon

    SEMICOLON  shift, and go to state 11

    semicolon  go to state 56


state 41

    4 block: declaration_list begin_program statement_list .
   29 statement_list: statement_list . statement semicolon

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    EXIT      shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    IDENT     shift, and go to state 8

    $default  reduce using rule 4 (block)

    statement   go to state 57
    var         go to state 42
    identifier  go to state 43
    if          go to state 44
    while       go to state 45
    do          go to state 46
    read        go to state 47
    write       go to state 48
    break       go to state 49
    continue    go to state 50
    exit        go to state 51


state 42

   12 statement: var . assign expression
   13          | var . assign bool_exp question expression colon expression

    ASSIGN  shift, and go to state 58

    assign  go to state 59


state 43

   73 var: identifier .
   74    | identifier . l_bracket expression r_bracket

    L_BRACKET  shift, and go to state 60

    $default  reduce using rule 73 (var)

    l_bracket  go to state 61


state 44

   14 statement: if . bool_exp then statement_list optional_elseif optional_else end_if

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    bool_exp            go to state 68
    relation_and_exp    go to state 69
    relation_exp        go to state 70
    expression          go to state 71
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 76
    not                 go to state 77
    true                go to state 78
    false               go to state 79
    sub                 go to state 80


state 45

   15 statement: while . bool_exp begin_loop statement_list end_loop

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    bool_exp            go to state 81
    relation_and_exp    go to state 69
    relation_exp        go to state 70
    expression          go to state 71
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 76
    not                 go to state 77
    true                go to state 78
    false               go to state 79
    sub                 go to state 80


state 46

   16 statement: do . begin_loop statement_list end_loop while bool_exp

    BEGINLOOP  shift, and go to state 82

    begin_loop  go to state 83


state 47

   17 statement: read . var_list

    IDENT  shift, and go to state 8

    var_list    go to state 84
    var         go to state 85
    identifier  go to state 43


state 48

   18 statement: write . var_list

    IDENT  shift, and go to state 8

    var_list    go to state 86
    var         go to state 85
    identifier  go to state 43


state 49

   19 statement: break .

    $default  reduce using rule 19 (statement)


state 50

   20 statement: continue .

    $default  reduce using rule 20 (statement)


state 51

   21 statement: exit .

    $default  reduce using rule 21 (statement)


state 52

    8 identifier_list: identifier_list comma identifier .

    $default  reduce using rule 8 (identifier_list)


state 53

   82 array: ARRAY .

    $default  reduce using rule 82 (array)


state 54

    7 declaration: identifier_list colon optional_array . integer

    INTEGER  shift, and go to state 87

    integer  go to state 88


state 55

   10 optional_array: array . l_bracket number r_bracket of

    L_BRACKET  shift, and go to state 60

    l_bracket  go to state 89


state 56

   30 statement_list: statement semicolon .

    $default  reduce using rule 30 (statement_list)


state 57

   29 statement_list: statement_list statement . semicolon

    SEMICOLON  shift, and go to state 11

    semicolon  go to state 90


state 58

   90 assign: ASSIGN .

    $default  reduce using rule 90 (assign)


state 59

   12 statement: var assign . expression
   13          | var assign . bool_exp question expression colon expression

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    bool_exp            go to state 91
    relation_and_exp    go to state 69
    relation_exp        go to state 70
    expression          go to state 92
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 76
    not                 go to state 77
    true                go to state 78
    false               go to state 79
    sub                 go to state 80


state 60

   83 l_bracket: L_BRACKET .

    $default  reduce using rule 83 (l_bracket)


state 61

   74 var: identifier l_bracket . expression r_bracket

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    expression          go to state 93
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 94
    sub                 go to state 80


state 62

  108 not: NOT .

    $default  reduce using rule 108 (not)


state 63

  109 true: TRUE .

    $default  reduce using rule 109 (true)


state 64

  110 false: FALSE .

    $default  reduce using rule 110 (false)


state 65

  118 sub: SUB .

    $default  reduce using rule 118 (sub)


state 66

   86 l_paren: L_PAREN .

    $default  reduce using rule 86 (l_paren)


state 67

   84 number: NUMBER .

    $default  reduce using rule 84 (number)


state 68

   14 statement: if bool_exp . then statement_list optional_elseif optional_else end_if

    THEN  shift, and go to state 95

    then  go to state 96


state 69

   31 bool_exp: relation_and_exp . relation_and_exp_list

    OR  shift, and go to state 97

    OR        [reduce using rule 34 (relation_and_exp_list)]
    $default  reduce using rule 34 (relation_and_exp_list)

    relation_and_exp_list  go to state 98
    or                     go to state 99


state 70

   35 relation_and_exp: relation_exp . relation_exp_list

    AND  shift, and go to state 100

    AND       [reduce using rule 38 (relation_exp_list)]
    $default  reduce using rule 38 (relation_exp_list)

    relation_exp_list  go to state 101
    and                go to state 102


state 71

   43 relation_exp: expression . comp expression

    EQ   shift, and go to state 103
    NEQ  shift, and go to state 104
    LT   shift, and go to state 105
    GT   shift, and go to state 106
    LTE  shift, and go to state 107
    GTE  shift, and go to state 108

    comp                      go to state 109
    equal_to                  go to state 110
    not_equal_to              go to state 111
    less_than                 go to state 112
    greater_than              go to state 113
    less_than_or_equal_to     go to state 114
    greater_than_or_equal_to  go to state 115


state 72

   53 expression: multiplicative_exp . multiplicative_exp_list

    SUB  shift, and go to state 65
    ADD  shift, and go to state 116

    SUB       [reduce using rule 58 (multiplicative_exp_list)]
    ADD       [reduce using rule 58 (multiplicative_exp_list)]
    $default  reduce using rule 58 (multiplicative_exp_list)

    multiplicative_exp_list  go to state 117
    add                      go to state 118
    sub                      go to state 119


state 73

   59 multiplicative_exp: term . term_list

    MULT  shift, and go to state 120
    DIV   shift, and go to state 121
    MOD   shift, and go to state 122

    MULT      [reduce using rule 66 (term_list)]
    DIV       [reduce using rule 66 (term_list)]
    MOD       [reduce using rule 66 (term_list)]
    $default  reduce using rule 66 (term_list)

    term_list  go to state 123
    multiply   go to state 124
    divide     go to state 125
    mod        go to state 126


state 74

   70 term: var .

    $default  reduce using rule 70 (term)


state 75

   71 term: number .

    $default  reduce using rule 71 (term)


state 76

   46 relation_exp: l_paren . bool_exp r_paren
   72 term: l_paren . expression r_paren

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    bool_exp            go to state 127
    relation_and_exp    go to state 69
    relation_exp        go to state 70
    expression          go to state 128
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 76
    not                 go to state 77
    true                go to state 78
    false               go to state 79
    sub                 go to state 80


state 77

   39 relation_exp: not . expression comp expression
   40             | not . true
   41             | not . false
   42             | not . l_paren bool_exp r_paren

    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    expression          go to state 129
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 130
    true                go to state 131
    false               go to state 132
    sub                 go to state 80


state 78

   44 relation_exp: true .

    $default  reduce using rule 44 (relation_exp)


state 79

   45 relation_exp: false .

    $default  reduce using rule 45 (relation_exp)


state 80

   67 term: sub . var
   68     | sub . number var
   69     | sub . l_paren expression r_paren

    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    var         go to state 133
    identifier  go to state 43
    number      go to state 134
    l_paren     go to state 135


state 81

   15 statement: while bool_exp . begin_loop statement_list end_loop

    BEGINLOOP  shift, and go to state 82

    begin_loop  go to state 136


state 82

   98 begin_loop: BEGINLOOP .

    $default  reduce using rule 98 (begin_loop)


state 83

   16 statement: do begin_loop . statement_list end_loop while bool_exp

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    EXIT      shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    IDENT     shift, and go to state 8

    statement       go to state 40
    statement_list  go to state 137
    var             go to state 42
    identifier      go to state 43
    if              go to state 44
    while           go to state 45
    do              go to state 46
    read            go to state 47
    write           go to state 48
    break           go to state 49
    continue        go to state 50
    exit            go to state 51


state 84

   17 statement: read var_list .
   27 var_list: var_list . comma var

    COMMA  shift, and go to state 27

    $default  reduce using rule 17 (statement)

    comma  go to state 138


state 85

   28 var_list: var .

    $default  reduce using rule 28 (var_list)


state 86

   18 statement: write var_list .
   27 var_list: var_list . comma var

    COMMA  shift, and go to state 27

    $default  reduce using rule 18 (statement)

    comma  go to state 138


state 87

   89 integer: INTEGER .

    $default  reduce using rule 89 (integer)


state 88

    7 declaration: identifier_list colon optional_array integer .

    $default  reduce using rule 7 (declaration)


state 89

   10 optional_array: array l_bracket . number r_bracket of

    NUMBER  shift, and go to state 67

    number  go to state 139


state 90

   29 statement_list: statement_list statement semicolon .

    $default  reduce using rule 29 (statement_list)


state 91

   13 statement: var assign bool_exp . question expression colon expression

    QUESTION  shift, and go to state 140

    question  go to state 141


state 92

   12 statement: var assign expression .
   43 relation_exp: expression . comp expression

    EQ   shift, and go to state 103
    NEQ  shift, and go to state 104
    LT   shift, and go to state 105
    GT   shift, and go to state 106
    LTE  shift, and go to state 107
    GTE  shift, and go to state 108

    $default  reduce using rule 12 (statement)

    comp                      go to state 109
    equal_to                  go to state 110
    not_equal_to              go to state 111
    less_than                 go to state 112
    greater_than              go to state 113
    less_than_or_equal_to     go to state 114
    greater_than_or_equal_to  go to state 115


state 93

   74 var: identifier l_bracket expression . r_bracket

    R_BRACKET  shift, and go to state 142

    r_bracket  go to state 143


state 94

   72 term: l_paren . expression r_paren

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    expression          go to state 144
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 94
    sub                 go to state 80


state 95

   93 then: THEN .

    $default  reduce using rule 93 (then)


state 96

   14 statement: if bool_exp then . statement_list optional_elseif optional_else end_if

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    EXIT      shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    IDENT     shift, and go to state 8

    statement       go to state 40
    statement_list  go to state 145
    var             go to state 42
    identifier      go to state 43
    if              go to state 44
    while           go to state 45
    do              go to state 46
    read            go to state 47
    write           go to state 48
    break           go to state 49
    continue        go to state 50
    exit            go to state 51


state 97

  106 or: OR .

    $default  reduce using rule 106 (or)


state 98

   31 bool_exp: relation_and_exp relation_and_exp_list .
   32 relation_and_exp_list: relation_and_exp_list . or relation_and_exp

    OR  shift, and go to state 97

    $default  reduce using rule 31 (bool_exp)

    or  go to state 146


state 99

   33 relation_and_exp_list: or . relation_and_exp

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    relation_and_exp    go to state 147
    relation_exp        go to state 70
    expression          go to state 71
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 76
    not                 go to state 77
    true                go to state 78
    false               go to state 79
    sub                 go to state 80


state 100

  107 and: AND .

    $default  reduce using rule 107 (and)


state 101

   35 relation_and_exp: relation_exp relation_exp_list .
   36 relation_exp_list: relation_exp_list . and relation_exp

    AND  shift, and go to state 100

    $default  reduce using rule 35 (relation_and_exp)

    and  go to state 148


state 102

   37 relation_exp_list: and . relation_exp

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    relation_exp        go to state 149
    expression          go to state 71
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 76
    not                 go to state 77
    true                go to state 78
    false               go to state 79
    sub                 go to state 80


state 103

  111 equal_to: EQ .

    $default  reduce using rule 111 (equal_to)


state 104

  112 not_equal_to: NEQ .

    $default  reduce using rule 112 (not_equal_to)


state 105

  113 less_than: LT .

    $default  reduce using rule 113 (less_than)


state 106

  114 greater_than: GT .

    $default  reduce using rule 114 (greater_than)


state 107

  115 less_than_or_equal_to: LTE .

    $default  reduce using rule 115 (less_than_or_equal_to)


state 108

  116 greater_than_or_equal_to: GTE .

    $default  reduce using rule 116 (greater_than_or_equal_to)


state 109

   43 relation_exp: expression comp . expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    expression          go to state 150
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 94
    sub                 go to state 80


state 110

   47 comp: equal_to .

    $default  reduce using rule 47 (comp)


state 111

   48 comp: not_equal_to .

    $default  reduce using rule 48 (comp)


state 112

   49 comp: less_than .

    $default  reduce using rule 49 (comp)


state 113

   50 comp: greater_than .

    $default  reduce using rule 50 (comp)


state 114

   51 comp: less_than_or_equal_to .

    $default  reduce using rule 51 (comp)


state 115

   52 comp: greater_than_or_equal_to .

    $default  reduce using rule 52 (comp)


state 116

  117 add: ADD .

    $default  reduce using rule 117 (add)


state 117

   53 expression: multiplicative_exp multiplicative_exp_list .
   54 multiplicative_exp_list: multiplicative_exp_list . add multiplicative_exp
   55                        | multiplicative_exp_list . sub multiplicative_exp

    SUB  shift, and go to state 65
    ADD  shift, and go to state 116

    $default  reduce using rule 53 (expression)

    add  go to state 151
    sub  go to state 152


state 118

   56 multiplicative_exp_list: add . multiplicative_exp

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    multiplicative_exp  go to state 153
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 94
    sub                 go to state 80


state 119

   57 multiplicative_exp_list: sub . multiplicative_exp

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    multiplicative_exp  go to state 154
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 94
    sub                 go to state 80


state 120

  119 multiply: MULT .

    $default  reduce using rule 119 (multiply)


state 121

  120 divide: DIV .

    $default  reduce using rule 120 (divide)


state 122

  121 mod: MOD .

    $default  reduce using rule 121 (mod)


state 123

   59 multiplicative_exp: term term_list .
   60 term_list: term_list . multiply term
   61          | term_list . divide term
   62          | term_list . mod term

    MULT  shift, and go to state 120
    DIV   shift, and go to state 121
    MOD   shift, and go to state 122

    $default  reduce using rule 59 (multiplicative_exp)

    multiply  go to state 155
    divide    go to state 156
    mod       go to state 157


state 124

   63 term_list: multiply . term

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    term        go to state 158
    var         go to state 74
    identifier  go to state 43
    number      go to state 75
    l_paren     go to state 94
    sub         go to state 80


state 125

   64 term_list: divide . term

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    term        go to state 159
    var         go to state 74
    identifier  go to state 43
    number      go to state 75
    l_paren     go to state 94
    sub         go to state 80


state 126

   65 term_list: mod . term

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    term        go to state 160
    var         go to state 74
    identifier  go to state 43
    number      go to state 75
    l_paren     go to state 94
    sub         go to state 80


state 127

   46 relation_exp: l_paren bool_exp . r_paren

    R_PAREN  shift, and go to state 161

    r_paren  go to state 162


state 128

   43 relation_exp: expression . comp expression
   72 term: l_paren expression . r_paren

    EQ       shift, and go to state 103
    NEQ      shift, and go to state 104
    LT       shift, and go to state 105
    GT       shift, and go to state 106
    LTE      shift, and go to state 107
    GTE      shift, and go to state 108
    R_PAREN  shift, and go to state 161

    comp                      go to state 109
    r_paren                   go to state 163
    equal_to                  go to state 110
    not_equal_to              go to state 111
    less_than                 go to state 112
    greater_than              go to state 113
    less_than_or_equal_to     go to state 114
    greater_than_or_equal_to  go to state 115


state 129

   39 relation_exp: not expression . comp expression

    EQ   shift, and go to state 103
    NEQ  shift, and go to state 104
    LT   shift, and go to state 105
    GT   shift, and go to state 106
    LTE  shift, and go to state 107
    GTE  shift, and go to state 108

    comp                      go to state 164
    equal_to                  go to state 110
    not_equal_to              go to state 111
    less_than                 go to state 112
    greater_than              go to state 113
    less_than_or_equal_to     go to state 114
    greater_than_or_equal_to  go to state 115


state 130

   42 relation_exp: not l_paren . bool_exp r_paren
   72 term: l_paren . expression r_paren

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    bool_exp            go to state 165
    relation_and_exp    go to state 69
    relation_exp        go to state 70
    expression          go to state 128
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 76
    not                 go to state 77
    true                go to state 78
    false               go to state 79
    sub                 go to state 80


state 131

   40 relation_exp: not true .

    $default  reduce using rule 40 (relation_exp)


state 132

   41 relation_exp: not false .

    $default  reduce using rule 41 (relation_exp)


state 133

   67 term: sub var .

    $default  reduce using rule 67 (term)


state 134

   68 term: sub number . var

    IDENT  shift, and go to state 8

    var         go to state 166
    identifier  go to state 43


state 135

   69 term: sub l_paren . expression r_paren

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    expression          go to state 167
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 94
    sub                 go to state 80


state 136

   15 statement: while bool_exp begin_loop . statement_list end_loop

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    EXIT      shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    IDENT     shift, and go to state 8

    statement       go to state 40
    statement_list  go to state 168
    var             go to state 42
    identifier      go to state 43
    if              go to state 44
    while           go to state 45
    do              go to state 46
    read            go to state 47
    write           go to state 48
    break           go to state 49
    continue        go to state 50
    exit            go to state 51


state 137

   16 statement: do begin_loop statement_list . end_loop while bool_exp
   29 statement_list: statement_list . statement semicolon

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    ENDLOOP   shift, and go to state 169
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    EXIT      shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    IDENT     shift, and go to state 8

    statement   go to state 57
    var         go to state 42
    identifier  go to state 43
    if          go to state 44
    while       go to state 45
    end_loop    go to state 170
    do          go to state 46
    read        go to state 47
    write       go to state 48
    break       go to state 49
    continue    go to state 50
    exit        go to state 51


state 138

   27 var_list: var_list comma . var

    IDENT  shift, and go to state 8

    var         go to state 171
    identifier  go to state 43


state 139

   10 optional_array: array l_bracket number . r_bracket of

    R_BRACKET  shift, and go to state 142

    r_bracket  go to state 172


state 140

   91 question: QUESTION .

    $default  reduce using rule 91 (question)


state 141

   13 statement: var assign bool_exp question . expression colon expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    expression          go to state 173
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 94
    sub                 go to state 80


state 142

   85 r_bracket: R_BRACKET .

    $default  reduce using rule 85 (r_bracket)


state 143

   74 var: identifier l_bracket expression r_bracket .

    $default  reduce using rule 74 (var)


state 144

   72 term: l_paren expression . r_paren

    R_PAREN  shift, and go to state 161

    r_paren  go to state 163


state 145

   14 statement: if bool_exp then statement_list . optional_elseif optional_else end_if
   29 statement_list: statement_list . statement semicolon

    IF        shift, and go to state 32
    ELSEIF    shift, and go to state 174
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    EXIT      shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    IDENT     shift, and go to state 8

    ELSEIF    [reduce using rule 24 (optional_elseif)]
    $default  reduce using rule 24 (optional_elseif)

    statement        go to state 57
    optional_elseif  go to state 175
    var              go to state 42
    identifier       go to state 43
    if               go to state 44
    elseif           go to state 176
    while            go to state 45
    do               go to state 46
    read             go to state 47
    write            go to state 48
    break            go to state 49
    continue         go to state 50
    exit             go to state 51


state 146

   32 relation_and_exp_list: relation_and_exp_list or . relation_and_exp

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    relation_and_exp    go to state 177
    relation_exp        go to state 70
    expression          go to state 71
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 76
    not                 go to state 77
    true                go to state 78
    false               go to state 79
    sub                 go to state 80


state 147

   33 relation_and_exp_list: or relation_and_exp .

    $default  reduce using rule 33 (relation_and_exp_list)


state 148

   36 relation_exp_list: relation_exp_list and . relation_exp

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    relation_exp        go to state 178
    expression          go to state 71
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 76
    not                 go to state 77
    true                go to state 78
    false               go to state 79
    sub                 go to state 80


state 149

   37 relation_exp_list: and relation_exp .

    $default  reduce using rule 37 (relation_exp_list)


state 150

   43 relation_exp: expression comp expression .

    $default  reduce using rule 43 (relation_exp)


state 151

   54 multiplicative_exp_list: multiplicative_exp_list add . multiplicative_exp

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    multiplicative_exp  go to state 179
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 94
    sub                 go to state 80


state 152

   55 multiplicative_exp_list: multiplicative_exp_list sub . multiplicative_exp

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    multiplicative_exp  go to state 180
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 94
    sub                 go to state 80


state 153

   56 multiplicative_exp_list: add multiplicative_exp .

    $default  reduce using rule 56 (multiplicative_exp_list)


state 154

   57 multiplicative_exp_list: sub multiplicative_exp .

    $default  reduce using rule 57 (multiplicative_exp_list)


state 155

   60 term_list: term_list multiply . term

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    term        go to state 181
    var         go to state 74
    identifier  go to state 43
    number      go to state 75
    l_paren     go to state 94
    sub         go to state 80


state 156

   61 term_list: term_list divide . term

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    term        go to state 182
    var         go to state 74
    identifier  go to state 43
    number      go to state 75
    l_paren     go to state 94
    sub         go to state 80


state 157

   62 term_list: term_list mod . term

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    term        go to state 183
    var         go to state 74
    identifier  go to state 43
    number      go to state 75
    l_paren     go to state 94
    sub         go to state 80


state 158

   63 term_list: multiply term .

    $default  reduce using rule 63 (term_list)


state 159

   64 term_list: divide term .

    $default  reduce using rule 64 (term_list)


state 160

   65 term_list: mod term .

    $default  reduce using rule 65 (term_list)


state 161

   87 r_paren: R_PAREN .

    $default  reduce using rule 87 (r_paren)


state 162

   46 relation_exp: l_paren bool_exp r_paren .

    $default  reduce using rule 46 (relation_exp)


state 163

   72 term: l_paren expression r_paren .

    $default  reduce using rule 72 (term)


state 164

   39 relation_exp: not expression comp . expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    expression          go to state 184
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 94
    sub                 go to state 80


state 165

   42 relation_exp: not l_paren bool_exp . r_paren

    R_PAREN  shift, and go to state 161

    r_paren  go to state 185


state 166

   68 term: sub number var .

    $default  reduce using rule 68 (term)


state 167

   69 term: sub l_paren expression . r_paren

    R_PAREN  shift, and go to state 161

    r_paren  go to state 186


state 168

   15 statement: while bool_exp begin_loop statement_list . end_loop
   29 statement_list: statement_list . statement semicolon

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    ENDLOOP   shift, and go to state 169
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    EXIT      shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    IDENT     shift, and go to state 8

    statement   go to state 57
    var         go to state 42
    identifier  go to state 43
    if          go to state 44
    while       go to state 45
    end_loop    go to state 187
    do          go to state 46
    read        go to state 47
    write       go to state 48
    break       go to state 49
    continue    go to state 50
    exit        go to state 51


state 169

   99 end_loop: ENDLOOP .

    $default  reduce using rule 99 (end_loop)


state 170

   16 statement: do begin_loop statement_list end_loop . while bool_exp

    WHILE  shift, and go to state 33

    while  go to state 188


state 171

   27 var_list: var_list comma var .

    $default  reduce using rule 27 (var_list)


state 172

   10 optional_array: array l_bracket number r_bracket . of

    OF  shift, and go to state 189

    of  go to state 190


state 173

   13 statement: var assign bool_exp question expression . colon expression

    COLON  shift, and go to state 26

    colon  go to state 191


state 174

   95 elseif: ELSEIF .

    $default  reduce using rule 95 (elseif)


state 175

   14 statement: if bool_exp then statement_list optional_elseif . optional_else end_if
   22 optional_elseif: optional_elseif . elseif bool_exp statement_list

    ELSE    shift, and go to state 192
    ELSEIF  shift, and go to state 174

    $default  reduce using rule 26 (optional_else)

    optional_else  go to state 193
    elseif         go to state 194
    else           go to state 195


state 176

   23 optional_elseif: elseif . bool_exp statement_list

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    bool_exp            go to state 196
    relation_and_exp    go to state 69
    relation_exp        go to state 70
    expression          go to state 71
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 76
    not                 go to state 77
    true                go to state 78
    false               go to state 79
    sub                 go to state 80


state 177

   32 relation_and_exp_list: relation_and_exp_list or relation_and_exp .

    $default  reduce using rule 32 (relation_and_exp_list)


state 178

   36 relation_exp_list: relation_exp_list and relation_exp .

    $default  reduce using rule 36 (relation_exp_list)


state 179

   54 multiplicative_exp_list: multiplicative_exp_list add multiplicative_exp .

    $default  reduce using rule 54 (multiplicative_exp_list)


state 180

   55 multiplicative_exp_list: multiplicative_exp_list sub multiplicative_exp .

    $default  reduce using rule 55 (multiplicative_exp_list)


state 181

   60 term_list: term_list multiply term .

    $default  reduce using rule 60 (term_list)


state 182

   61 term_list: term_list divide term .

    $default  reduce using rule 61 (term_list)


state 183

   62 term_list: term_list mod term .

    $default  reduce using rule 62 (term_list)


state 184

   39 relation_exp: not expression comp expression .

    $default  reduce using rule 39 (relation_exp)


state 185

   42 relation_exp: not l_paren bool_exp r_paren .

    $default  reduce using rule 42 (relation_exp)


state 186

   69 term: sub l_paren expression r_paren .

    $default  reduce using rule 69 (term)


state 187

   15 statement: while bool_exp begin_loop statement_list end_loop .

    $default  reduce using rule 15 (statement)


state 188

   16 statement: do begin_loop statement_list end_loop while . bool_exp

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    bool_exp            go to state 197
    relation_and_exp    go to state 69
    relation_exp        go to state 70
    expression          go to state 71
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 76
    not                 go to state 77
    true                go to state 78
    false               go to state 79
    sub                 go to state 80


state 189

   88 of: OF .

    $default  reduce using rule 88 (of)


state 190

   10 optional_array: array l_bracket number r_bracket of .

    $default  reduce using rule 10 (optional_array)


state 191

   13 statement: var assign bool_exp question expression colon . expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    expression          go to state 198
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 94
    sub                 go to state 80


state 192

   96 else: ELSE .

    $default  reduce using rule 96 (else)


state 193

   14 statement: if bool_exp then statement_list optional_elseif optional_else . end_if

    ENDIF  shift, and go to state 199

    end_if  go to state 200


state 194

   22 optional_elseif: optional_elseif elseif . bool_exp statement_list

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 8

    bool_exp            go to state 201
    relation_and_exp    go to state 69
    relation_exp        go to state 70
    expression          go to state 71
    multiplicative_exp  go to state 72
    term                go to state 73
    var                 go to state 74
    identifier          go to state 43
    number              go to state 75
    l_paren             go to state 76
    not                 go to state 77
    true                go to state 78
    false               go to state 79
    sub                 go to state 80


state 195

   25 optional_else: else . statement_list

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    EXIT      shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    IDENT     shift, and go to state 8

    statement       go to state 40
    statement_list  go to state 202
    var             go to state 42
    identifier      go to state 43
    if              go to state 44
    while           go to state 45
    do              go to state 46
    read            go to state 47
    write           go to state 48
    break           go to state 49
    continue        go to state 50
    exit            go to state 51


state 196

   23 optional_elseif: elseif bool_exp . statement_list

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    EXIT      shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    IDENT     shift, and go to state 8

    statement       go to state 40
    statement_list  go to state 203
    var             go to state 42
    identifier      go to state 43
    if              go to state 44
    while           go to state 45
    do              go to state 46
    read            go to state 47
    write           go to state 48
    break           go to state 49
    continue        go to state 50
    exit            go to state 51


state 197

   16 statement: do begin_loop statement_list end_loop while bool_exp .

    $default  reduce using rule 16 (statement)


state 198

   13 statement: var assign bool_exp question expression colon expression .

    $default  reduce using rule 13 (statement)


state 199

   94 end_if: ENDIF .

    $default  reduce using rule 94 (end_if)


state 200

   14 statement: if bool_exp then statement_list optional_elseif optional_else end_if .

    $default  reduce using rule 14 (statement)


state 201

   22 optional_elseif: optional_elseif elseif bool_exp . statement_list

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    EXIT      shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    IDENT     shift, and go to state 8

    statement       go to state 40
    statement_list  go to state 204
    var             go to state 42
    identifier      go to state 43
    if              go to state 44
    while           go to state 45
    do              go to state 46
    read            go to state 47
    write           go to state 48
    break           go to state 49
    continue        go to state 50
    exit            go to state 51


state 202

   25 optional_else: else statement_list .
   29 statement_list: statement_list . statement semicolon

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    EXIT      shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    IDENT     shift, and go to state 8

    $default  reduce using rule 25 (optional_else)

    statement   go to state 57
    var         go to state 42
    identifier  go to state 43
    if          go to state 44
    while       go to state 45
    do          go to state 46
    read        go to state 47
    write       go to state 48
    break       go to state 49
    continue    go to state 50
    exit        go to state 51


state 203

   23 optional_elseif: elseif bool_exp statement_list .
   29 statement_list: statement_list . statement semicolon

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    EXIT      shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    IDENT     shift, and go to state 8

    $default  reduce using rule 23 (optional_elseif)

    statement   go to state 57
    var         go to state 42
    identifier  go to state 43
    if          go to state 44
    while       go to state 45
    do          go to state 46
    read        go to state 47
    write       go to state 48
    break       go to state 49
    continue    go to state 50
    exit        go to state 51


state 204

   22 optional_elseif: optional_elseif elseif bool_exp statement_list .
   29 statement_list: statement_list . statement semicolon

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    EXIT      shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    IDENT     shift, and go to state 8

    $default  reduce using rule 22 (optional_elseif)

    statement   go to state 57
    var         go to state 42
    identifier  go to state 43
    if          go to state 44
    while       go to state 45
    do          go to state 46
    read        go to state 47
    write       go to state 48
    break       go to state 49
    continue    go to state 50
    exit        go to state 51
